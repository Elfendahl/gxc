//===========================================================================
// clang-format off
NAME          = "FFT2PREP Gridding Program"
#include <version.gxh>

TRANSLATIONDOMAIN = "magmap"
TRANSLATIONFRIENDLYPATH = "GX/MAGMAP/Step-By-Step Filtering"

DESCRIPTION   = "\

Creates a Grid file with FFT2 grid pre-processing.

Parameters: 

     FFT2PREP.INGRD   - Name of Old Grid file
             .OUTGRD  - Name of New Grid file
             .TORDER  - Order of trend surface to remove
             .TBASE   - Trend based on (edge points/all points)
             .PEX     - % expansion
             .TEX     - Square or rectangular expansion
             .FILL    - Grid fill method
             .ZDIST   - Roll off to zero at distance of (cells)
             .ALIM    - Limit all amplitudes to be less than
             .ELIM    - Edge amplitude limit
"

//===========================================================================
// Revision History:
//
// v6.0.0   Add output grid to the grid explorer
//===========================================================================

RESOURCE = "fft2prep.gr"
#include "fft2prep.grh"

//===========================================================================

#include <all.gxh>
// clang-format on


//===========================================================================
//                             GLOBAL VARIABLES
//===========================================================================

string(STR_FILE) sInGrd;  // Name of old grid file
string(STR_FILE) sOutGrd;    // Name of new grid file
string(STR_FILE) sRefFil;    // Name of reference file (_ref.bin)

string(STR_DEFAULT) sTOrder;  //    .
string(STR_DEFAULT) sTBase;   //    .
string(STR_DEFAULT) sPEx;     //    .
string(STR_DEFAULT) sTEx;     //  optional parameters
string(STR_DEFAULT) sFill;    //    .
string(STR_DEFAULT) sZDist;   //    .
string(STR_DEFAULT) sALim;    //    .
string(STR_DEFAULT) sELim;    //    .

IMG IMGi;  //
IMG IMGo;  //  grid images
PG PG1;
PG PG2;
TR hTR;
IPJ hIPJ;

DGW Diag;  // Dialogue handle

int i;                               // utility int
int iNX, iNY, iNXe, iNYe, iXo, iYo;  // grid size
real rDx, rDy, rXo, rYo, rRot;       // grid info
real rXoe, rYoe;
int iTOrder, iTBase, iTOpt;  // grid trend parameters
real rPEx;                   // grid expansion parameters
int iTEx, iXX, iXY;
real rALim, rELim, rRollBase;  // grid fill parameters
int iZDist, iRollOpt, iMxf, iMxp, iWLim, iNPass;


//===========================================================================
//                           FFT2PREP CODE
//===========================================================================

{
   // --- Are we running interactively ? ---

   if (iInteractive_SYS())
   {
      // --- Create the Dialogue ---

      Diag = Create_DGW("FFT2PREPForm");

      // --- Set any Defaults from INI ---

      SetInfoSYS_DGW(Diag, _FFT2PREPFORM_0, DGW_FILEPATH, "FFT2PREP", "INGRD");
      SetInfoSYS_DGW(Diag, _FFT2PREPFORM_1, DGW_FILEPATH, "FFT2PREP", "OUTGRD");
      SetInfoSYS_DGW(Diag, _FFT2PREPFORM_2, DGW_LISTALIAS, "FFT2PREP", "TORDER");
      SetInfoSYS_DGW(Diag, _FFT2PREPFORM_3, DGW_LISTALIAS, "FFT2PREP", "TBASE");
      SetInfoSYS_DGW(Diag, _FFT2PREPFORM_4, DGW_TEXT, "FFT2PREP", "PEX");
      SetInfoSYS_DGW(Diag, _FFT2PREPFORM_5, DGW_LISTALIAS, "FFT2PREP", "TEX");
      SetInfoSYS_DGW(Diag, _FFT2PREPFORM_6, DGW_LISTALIAS, "FFT2PREP", "FILL");
      SetInfoSYS_DGW(Diag, _FFT2PREPFORM_7, DGW_TEXT, "FFT2PREP", "ZDIST");
      SetInfoSYS_DGW(Diag, _FFT2PREPFORM_8, DGW_TEXT, "FFT2PREP", "ALIM");
      SetInfoSYS_DGW(Diag, _FFT2PREPFORM_9, DGW_TEXT, "FFT2PREP", "ELIM");


      // --- Run the Dialogue ---

      i = iRunDialogue_DGW(Diag);
      if (i == 1)
         Cancel_SYS();


      // --- Put values back in INI ---

      GetInfoSYS_DGW(Diag, _FFT2PREPFORM_0, DGW_FILEPATH, "FFT2PREP", "INGRD");
      GetInfoSYS_DGW(Diag, _FFT2PREPFORM_1, DGW_FILEPATH, "FFT2PREP", "OUTGRD");
      GetInfoSYS_DGW(Diag, _FFT2PREPFORM_2, DGW_LISTALIAS, "FFT2PREP", "TORDER");
      GetInfoSYS_DGW(Diag, _FFT2PREPFORM_3, DGW_LISTALIAS, "FFT2PREP", "TBASE");
      GetInfoSYS_DGW(Diag, _FFT2PREPFORM_4, DGW_TEXT, "FFT2PREP", "PEX");
      GetInfoSYS_DGW(Diag, _FFT2PREPFORM_5, DGW_LISTALIAS, "FFT2PREP", "TEX");
      GetInfoSYS_DGW(Diag, _FFT2PREPFORM_6, DGW_LISTALIAS, "FFT2PREP", "FILL");
      GetInfoSYS_DGW(Diag, _FFT2PREPFORM_7, DGW_TEXT, "FFT2PREP", "ZDIST");
      GetInfoSYS_DGW(Diag, _FFT2PREPFORM_8, DGW_TEXT, "FFT2PREP", "ALIM");
      GetInfoSYS_DGW(Diag, _FFT2PREPFORM_9, DGW_TEXT, "FFT2PREP", "ELIM");

      Destroy_DGW(Diag);
   }


   // --- Get Parameters ---

   GetString_SYS("FFT2PREP", "INGRD", sInGrd);
   GetString_SYS("FFT2PREP", "OUTGRD", sOutGrd);
   GetString_SYS("FFT2PREP", "TORDER", sTOrder);
   GetString_SYS("FFT2PREP", "TBASE", sTBase);
   GetString_SYS("FFT2PREP", "PEX", sPEx);
   GetString_SYS("FFT2PREP", "TEX", sTEx);
   GetString_SYS("FFT2PREP", "FILL", sFill);
   GetString_SYS("FFT2PREP", "ZDIST", sZDist);
   GetString_SYS("FFT2PREP", "ALIM", sALim);
   GetString_SYS("FFT2PREP", "ELIM", sELim);
   
   // --- Default filll to maximum entropy ---
   if (iStrcmp_STR(sFill, _n("inverse distance"), 0) != 0 && 
       iStrcmp_STR(sFill, _n("maximum entropy"), 0) != 0)
      Strcpy_STR(sFill, _n("maximum entropy"));
   

   // --- Validate required parameters ---

   if (iStrlen_STR(sInGrd) <= 0)
      Abort_SYS(_("Old grid file name is invalid"));

   if (iStrlen_STR(sOutGrd) <= 0)
      Abort_SYS(_("New grid file name is invalid"));

   FileNamePart_STR(sInGrd, sRefFil, STR_FILE_PART_NAME);
   Strcat_STR(sRefFil, "_ref.bin");

   rDx = 1.0;
   rDy = 1.0;
   rXo = 0.0;
   rYo = 0.0;
   rRot = 0.0;
   rXoe = 0.0;
   rYoe = 0.0;


   // --- Set grid trend parameters ---

   if (iStrcmp_STR(sTOrder, _n("remove mean"), 0) == 0)
      iTOrder = 0;
   else if (iStrcmp_STR(sTOrder, _n("second order"), 0) == 0)
      iTOrder = 2;
   else if (iStrcmp_STR(sTOrder, _n("third order"), 0) == 0)
      iTOrder = 3;
   else
      iTOrder = 1;

   if (iStrcmp_STR(sTBase, _n("all points"), 0) == 0)
      iTBase = 0;  // PGU_TREND_ALL    0
   else
      iTBase = 1;  // PGU_TREND_EDGE   1


   // --- Set grid expansion parameters ---

   if (iStrlen_STR(sPEx) > 0)
      rPEx = rScanR_STR(sPEx);
   else
      rPEx = 10.0;
   if (rPEx < 0.0) rPEx = 0.0;

   if (iStrcmp_STR(sTEx, _n("rectangular"), 0) == 0)
      iTEx = 0;  // PGU_EXPAND_SHAPE_RECTANGLE  0
   else
      iTEx = 1;  // PGU_EXPAND_SHAPE_SQUARE     1

   iXX = 0;
   iXY = 0;

   // --- Set grid fill parameters ---

   if (iStrcmp_STR(sFill, _n("inverse distance"), 0) == 0)
   {
      iMxf = -1;
      iMxp = 0;
   }
   else
   {
      iMxf = 0;
      iMxp = 0;
   }

   if (iStrlen_STR(sZDist) > 0)
      iZDist = iScanI_STR(sZDist);
   else
      iZDist = -1;
   if (iZDist < 0 && iZDist != -1) iZDist = 0;

   if (iStrlen_STR(sALim) > 0)
      rALim = rScanR_STR(sALim);
   else
      rALim = 0.0;

   if (iStrlen_STR(sELim) > 0)
   {
      rELim = rScanR_STR(sELim);
      iWLim = 0;
   }
   else
   {
      rELim = -1.0;
      iWLim = -1;
   }

   rRollBase = 0.0;
   iRollOpt = 2;  // PGU_FILL_ROLLWT_LINEAR  1
                  // PGU_FILL_ROLLWT_SQUARE  2
   iNPass = 1;


   // --- Turn on Progress bar ---

   Progress_SYS(1);


   // --- Get pager(PG1) from input grid ---

   IMGi = CreateFile_IMG(GS_FLOAT, sInGrd, IMG_FILE_READONLY);
   GetInfo_IMG(IMGi, rDx, rDy, rXo, rYo, rRot);
   iNX = iNX_IMG(IMGi);
   iNY = iNY_IMG(IMGi);
   hTR = Create_TR(iTOrder);
   PG1 = Create_PG(iNY, iNX, GS_FLOAT);
   GetPG_IMG(IMGi, PG1);
   hIPJ = Create_IPJ();
   GetIPJ_IMG(IMGi, hIPJ);
   Destroy_IMG(IMGi);


   // --- Grid Trend Remove ---

   PG2 = Create_PG(iNY, iNX, GS_FLOAT);
   iTOpt = 0;  // trend calculate and remove
   Trend_PGU(PG1, PG2, hTR, iTOpt, iTBase, rXo, rYo, rDx, rDy);


   // --- Grid Expand and Fill ---

   Expand_PGU(PG2, PG1, rPEx, iTEx, iXX, iXY);
   Destroy_PG(PG2);
   
   iNYe = iNRows_PG(PG1);
   iNXe = iNCols_PG(PG1);
   iYo = (iNYe - iNY) / 2;
   iXo = (iNXe - iNX) / 2;


   // --- Grid Fill ---

   RefFile_PGU(PG1, sRefFil);

   Fill_PGU(PG1, iRollOpt, rRollBase, iZDist, iMxf, iMxp, rALim, rELim, iWLim, iNPass, sRefFil);


   // --- Output pre-processing grid ---

   IMGo = CreateNewFile_IMG(GS_FLOAT, 1, iNXe, iNYe, sOutGrd);
   rXoe = rXo - (real)iXo * rDx;
   rYoe = rYo - (real)iYo * rDy;
   SetInfo_IMG(IMGo, rDx, rDy, rXoe, rYoe, rRot);
   SetPG_IMG(IMGo, PG1);
   SetTR_IMG(IMGo, hTR);
   SetIPJ_IMG(IMGo, hIPJ);
   Destroy_IMG(IMGo);
   

   // --- Set parameter values for fft2 gxes ---

   SetString_SYS("FFT2IN", "IN", sOutGrd);
   SetString_SYS("FFT2FLT", "REF", sInGrd);
   SetString_SYS("FFT2CON", "INPUT_GRID", sInGrd);


   // --- Done ---

   Progress_SYS(0);
   Destroy_TR(hTR);
   Destroy_IPJ(hIPJ);

   if (iFileExist_SYS(sRefFil))
      iDeleteFile_SYS(sRefFil);

   // --- Add grid to the current project ---

   if (iInteractive_SYS())
      iAddDocument_PROJ(sOutGrd, "Grid", 1);
}


//-----------------------------------------------------------------------
