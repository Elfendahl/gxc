//*** extends 'class_empty.gxh'

#ifndef HGRID3D_GXH_DEFINED
#define HGRID3D_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class GRID3D
//
//-----------------------------------------------------------------------------------------------------------
//
// High Performance 3D Grid.
//
//-----------------------------------------------------------------------------------------------------------



//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// GRID3D_TYPE Definitions
//
// Type of Voxset
//
// GRID3D_DOUBLE
// DOUBLE
//
// GRID3D_VECTOR
// VECTOR
//
// GRID3D_THEMATIC
// THEMATIC
//
//===========================================================================================================


#define GRID3D_DOUBLE 0
#define GRID3D_VECTOR 1
#define GRID3D_THEMATIC 2





//===========================================================================================================
//
// Miscellaneous Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// GetType_GRID3D Get the type of this GRID3D
//
// Available      9.4
//-----------------------------------------------------------------------------------------------------------

[_public] int GetType_GRID3D(GRID3D);  // GRID3D object


  
//-----------------------------------------------------------------------------------------------------------
// iIsThematic_GRID3D Does this grid3d contain thematic data
//
// Available          9.4
//-----------------------------------------------------------------------------------------------------------

[_public] int iIsThematic_GRID3D(GRID3D);  // GRID3D object


  
//-----------------------------------------------------------------------------------------------------------
// iIsDouble_GRID3D Does this grid3d contain floating point data
//
// Available        9.4
//-----------------------------------------------------------------------------------------------------------

[_public] int iIsDouble_GRID3D(GRID3D);  // GRID3D object


  
//-----------------------------------------------------------------------------------------------------------
// iIsVector_GRID3D Does this grid3d contain vector data
//
// Available        9.4
//-----------------------------------------------------------------------------------------------------------

[_public] int iIsVector_GRID3D(GRID3D);  // GRID3D object


  
//-----------------------------------------------------------------------------------------------------------
// GetTPAT_GRID3D Get the TPAT from the thematic grid3d.
//
// Available      9.4
//-----------------------------------------------------------------------------------------------------------

[_public] void GetTPAT_GRID3D(GRID3D,   // GRID3D object
                              TPAT);    // TPAT object


  
//-----------------------------------------------------------------------------------------------------------
// SetTPAT_GRID3D Set the TPAT of a thematic grid3d.
//
// Available      9.4
//-----------------------------------------------------------------------------------------------------------

[_public] void SetTPAT_GRID3D(GRID3D,   // GRID3D object
                              TPAT);    // TPAT object


  
//-----------------------------------------------------------------------------------------------------------
// GetDoubleStats_GRID3D Get Double statistics.
//
// Available             9.4
//-----------------------------------------------------------------------------------------------------------

[_public] void GetDoubleStats_GRID3D(GRID3D,     // GRID3D object
                                     var int,    // Number of valid values
                                     var int,    // Number of invalid values
                                     var real,   // Min value
                                     var real,   // Maximum value
                                     var real,   // Mean value
                                     var real);  // Standard Deviation


  
//-----------------------------------------------------------------------------------------------------------
// GetThematicStats_GRID3D Get Thematic Data statistics.
//
// Available               9.4
//-----------------------------------------------------------------------------------------------------------

[_public] void GetThematicStats_GRID3D(GRID3D,    // GRID3D object
                                       var int,   // Number of valid values
                                       var int,   // Number of invalid values
                                       var int,   // Min value
                                       var int,   // Maximum value
                                       var int,   // Mean value
                                       var int);  // Standard Deviation


  
//-----------------------------------------------------------------------------------------------------------
// GetVectorStats_GRID3D Get Vector Data statistics.
//
// Available             9.4
//-----------------------------------------------------------------------------------------------------------

[_public] void GetVectorStats_GRID3D(GRID3D,     // GRID3D object
                                     var int,    // Number of valid values
                                     var int,    // Number of invalid values
                                     var real,   // Min X value
                                     var real,   // Min Y value
                                     var real,   // Min Z value
                                     var real,   // Maximum X value
                                     var real,   // Maximum Y value
                                     var real,   // Maximum Z value
                                     var real,   // Mean X value
                                     var real,   // Mean Y value
                                     var real,   // Mean Z value
                                     var real,   // Standard X Deviation
                                     var real,   // Standard Y Deviation
                                     var real);  // Standard Z Deviation


  
//-----------------------------------------------------------------------------------------------------------
// FillDouble_GRID3D Fill the grid3d with a single double value.
//
// Available         9.4
//-----------------------------------------------------------------------------------------------------------

[_public] void FillDouble_GRID3D(GRID3D,   // GRID3D object
                                 real);    // Fill Value


  
//-----------------------------------------------------------------------------------------------------------
// FillThematic_GRID3D Fill the grid3d with a single thematic value.
//
// Available           9.4
//-----------------------------------------------------------------------------------------------------------

[_public] void FillThematic_GRID3D(GRID3D,   // GRID3D object
                                   int);     // Fill Value


  
//-----------------------------------------------------------------------------------------------------------
// FillVector_GRID3D Fill the grid3d with a single vector value.
//
// Available         9.4
//-----------------------------------------------------------------------------------------------------------

[_public] void FillVector_GRID3D(GRID3D,   // GRID3D object
                                 real,     // Fill Value X
                                 real,     // Fill Value Y
                                 real);    // Fill Value Z


  
//-----------------------------------------------------------------------------------------------------------
// GetElementsInBlockX_GRID3D Get the number of cells in the block in the X direction
//
// Available                  9.4
//-----------------------------------------------------------------------------------------------------------

[_public] int GetElementsInBlockX_GRID3D(GRID3D);  // GRID3D object


  
//-----------------------------------------------------------------------------------------------------------
// GetElementsInBlockY_GRID3D Get the number of cells in the block in the Y direction
//
// Available                  9.4
//-----------------------------------------------------------------------------------------------------------

[_public] int GetElementsInBlockY_GRID3D(GRID3D);  // GRID3D object


  
//-----------------------------------------------------------------------------------------------------------
// GetElementsInBlockZ_GRID3D Get the number of cells in the block in the Z direction
//
// Available                  9.4
//-----------------------------------------------------------------------------------------------------------

[_public] int GetElementsInBlockZ_GRID3D(GRID3D);  // GRID3D object


  
//-----------------------------------------------------------------------------------------------------------
// ReadX_GRID3D Read data from a GRID3D in the x direction (MOST EFFICIENT)
//
// Available    9.4
//-----------------------------------------------------------------------------------------------------------

[_public] int ReadX_GRID3D(GRID3D,   // GRID3D object
                           int,      // X location
                           int,      // Y location
                           int,      // Z location
                           VV);      // VV Containing Data


  
//-----------------------------------------------------------------------------------------------------------
// WriteX_GRID3D Write data to a GRID3D in the X direction (MOST EFFICIENT)
//
// Available     9.4
//-----------------------------------------------------------------------------------------------------------

[_public] int WriteX_GRID3D(GRID3D,   // GRID3D object
                            int,      // X location
                            int,      // Y location
                            int,      // Z location
                            VV);      // VV Containing Data


  
//-----------------------------------------------------------------------------------------------------------
// ReadY_GRID3D Read data from a GRID3D in the Y direction
//
// Available    9.4
//-----------------------------------------------------------------------------------------------------------

[_public] int ReadY_GRID3D(GRID3D,   // GRID3D object
                           int,      // X location
                           int,      // Y location
                           int,      // Z location
                           VV);      // VV Containing Data


  
//-----------------------------------------------------------------------------------------------------------
// WriteY_GRID3D Write data to a GRID3D in the Y direction
//
// Available     9.4
//-----------------------------------------------------------------------------------------------------------

[_public] int WriteY_GRID3D(GRID3D,   // GRID3D object
                            int,      // X location
                            int,      // Y location
                            int,      // Z location
                            VV);      // VV Containing Data


  
//-----------------------------------------------------------------------------------------------------------
// ReadZ_GRID3D Read data from a GRID3D in the Z direction
//
// Available    9.4
//-----------------------------------------------------------------------------------------------------------

[_public] int ReadZ_GRID3D(GRID3D,   // GRID3D object
                           int,      // X location
                           int,      // Y location
                           int,      // Z location
                           VV);      // VV Containing Data


  
//-----------------------------------------------------------------------------------------------------------
// WriteZ_GRID3D Write data to a GRID3D in the Z direction
//
// Available     9.4
//-----------------------------------------------------------------------------------------------------------

[_public] int WriteZ_GRID3D(GRID3D,   // GRID3D object
                            int,      // X location
                            int,      // Y location
                            int,      // Z location
                            VV);      // VV Containing Data





//*** endblock Generated


#endif
