//*** extends 'class_empty.gxh'

#ifndef HMESHUTIL_GXH_DEFINED
#define HMESHUTIL_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class MESHUTIL
//
//-----------------------------------------------------------------------------------------------------------
//
// Mesh utility methods.
//
//-----------------------------------------------------------------------------------------------------------

//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// SURFACE_CLIP_MODE Definitions
//
// Surface Clip Mode
//
// SURFACE_CLIP_ABOVE
// Output the surface item above clipper surface
//
// SURFACE_CLIP_BELOW
// Output the surface item below clipper surface
//
// SURFACE_CLIP_BOTH
// Output the surface items both above & below the clipper surface
//
//===========================================================================================================


#define SURFACE_CLIP_ABOVE 0
#define SURFACE_CLIP_BELOW 1
#define SURFACE_CLIP_BOTH 2


//===========================================================================================================
//
// SURFACE_CLIP_STATUS Definitions
//
// Surface Clip Return Code
//
// SURFACE_CLIP_SUCCESS
// Surface clipping successful
//
// SURFACE_CLIP_SUCCESS_EMPTY
// Surface clipping successful, but with empty output
//
// SURFACE_CLIP_FAIL
// Surface clipping fail
//
//===========================================================================================================


#define SURFACE_CLIP_SUCCESS 0
#define SURFACE_CLIP_SUCCESS_EMPTY 1
#define SURFACE_CLIP_FAIL 2





//===========================================================================================================
//
// Miscellaneous Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// ImportGridToSurface_MESHUTIL Imports a Grid to a Surface
//
// Available                    9.5
//-----------------------------------------------------------------------------------------------------------

[_public] void ImportGridToSurface_MESHUTIL(string,   // Grid File Name
                                            string,   // Surface File Name
                                            string);  // Surface Item Name within the file


  
//-----------------------------------------------------------------------------------------------------------
// ClipSurfaceWithGrid_MESHUTIL Clip a Surface with a Grid Surface (grid converted to surface)
//
// Returns                      Surface clip status
//
// Available                    9.5
//-----------------------------------------------------------------------------------------------------------

[_public] int ClipSurfaceWithGrid_MESHUTIL(string,   // Input Geosurface file
                                           string,   // Input Surface name within Geosurface file
                                           string,   // Grid Surface file name
                                           string,   // Grid surface name within file
                                           string,   // Output Surface file
                                           string,   // Name of Surface Item above grid - required for mode=CLIP_ABOVE and CLIP_BOTH
                                           string,   // Name of Surface Item below grid - required for mode=CLIP_BELOW and CLIP_BOTH
                                           int);     // SURFACE_CLIP_MODE


  
//-----------------------------------------------------------------------------------------------------------
// ClipSurfaceWithExtents_MESHUTIL Clip a Surface with X,Y,Z extents
//
// Returns                         Surface clip status
//
// Available                       9.5
//-----------------------------------------------------------------------------------------------------------

[_public] int ClipSurfaceWithExtents_MESHUTIL(string,   // Input Geosurface file
                                              string,   // Input Surface name within Geosurface file
                                              string,   // Output Surface file
                                              string,   // Output Surface name
                                              real,     // Min value of X
                                              real,     // Max value of X
                                              real,     // Min value of Y
                                              real,     // Max value of Y
                                              real,     // Min value of Z
                                              real);    // Max value of Z


  
//-----------------------------------------------------------------------------------------------------------
// ClipSurfaceWithPolygon2d_MESHUTIL Clip a Surface a specified Polygon file
//
// Returns                           Surface clip status
//
// Available                         9.5
//-----------------------------------------------------------------------------------------------------------

[_public] int ClipSurfaceWithPolygon2d_MESHUTIL(string,   // Input Geosurface file
                                                string,   // Input Surface name within Geosurface file
                                                string,   // Polygon File
                                                string,   // Output Surface file
                                                string,   // Output Surface name
                                                int);     // Set true if the values inside polygon are to be masked


  
//-----------------------------------------------------------------------------------------------------------
// ComputeSurfaceUnion_MESHUTIL Compute union of two surfaces
//
// Returns                      MESH handle, terminates if creation fails
//
// Available                    9.5
//-----------------------------------------------------------------------------------------------------------

[_public] void ComputeSurfaceUnion_MESHUTIL(string,   // Primary Geosurface file
                                            string,   // Primary Surface Name within Geosurface File
                                            string,   // Secondary Geosurface file
                                            string,   // Secondary Surface Name within Geosurface File
                                            string,   // Output surface file
                                            string);  // Output surface name


  
//-----------------------------------------------------------------------------------------------------------
// ComputeSurfaceClip_MESHUTIL Clip a surface with another surface, and output the clipped surfaces
//
// Returns                     MESH handle, terminates if creation fails
//
// Available                   9.5
//-----------------------------------------------------------------------------------------------------------

[_public] void ComputeSurfaceClip_MESHUTIL(string,   // Primary Geosurface file
                                           string,   // Primary Surface Name within Geosurface File
                                           string,   // Secondary Geosurface file
                                           string,   // Secondary Surface Name within Geosurface File
                                           string,   // Output surface file
                                           string);  // Output surface name


  
//-----------------------------------------------------------------------------------------------------------
// ComputeSurfaceIntersection_MESHUTIL Computes and outputs the intersection of two closed surfaces
//
// Returns                             MESH handle, terminates if creation fails
//
// Available                           9.5
//-----------------------------------------------------------------------------------------------------------

[_public] void ComputeSurfaceIntersection_MESHUTIL(string,   // Primary Geosurface file
                                                   string,   // Primary Surface Name within Geosurface File
                                                   string,   // Secondary Geosurface file
                                                   string,   // Secondary Surface Name within Geosurface File
                                                   string,   // Output surface file
                                                   string);  // Output surface name


  
//-----------------------------------------------------------------------------------------------------------
// ComputeSurfaceSimplification_MESHUTIL Simplifies a surface by reducing the number of edges by half
//
// Returns                               MESH handle, terminates if creation fails
//
// Available                             9.5
//-----------------------------------------------------------------------------------------------------------

[_public] void ComputeSurfaceSimplification_MESHUTIL(string,   // Input Geosurface file
                                                     string,   // Input Surface Name within Geosurface File
                                                     string,   // Output Geosurface file
                                                     string);  // Output Surface Name within Geosurface File


  
//-----------------------------------------------------------------------------------------------------------
// ComputeSurfaceSubdivision_MESHUTIL Smooths a surface by applying a loop subdivision algorithm
//
// Returns                            MESH handle, terminates if creation fails
//
// Available                          9.5
//-----------------------------------------------------------------------------------------------------------

[_public] void ComputeSurfaceSubdivision_MESHUTIL(string,   // Input Geosurface file
                                                  string,   // Input Surface Name within Geosurface File
                                                  string,   // Output Geosurface file
                                                  string);  // Output Surface Name within Geosurface File


  
//-----------------------------------------------------------------------------------------------------------
// DoesSurfaceIntersect_MESHUTIL Checks if the two surfaces intersect at all
//
// Returns                       Returns 1 if intersects, 0 if surfaces do not intersect
//
// Available                     9.5
//-----------------------------------------------------------------------------------------------------------

[_public] int DoesSurfaceIntersect_MESHUTIL(string,   // Primary Geosurface file
                                            string,   // Primary Surface Name within Geosurface File
                                            string,   // Secondary Geosurface file
                                            string);  // Secondary Surface Name within Geosurface File


  
//-----------------------------------------------------------------------------------------------------------
// DoesSurfaceSelfIntersect_MESHUTIL Checks if a surface self-intersects
//
// Returns                           Returns 1 if surface self intersects, 0 if surface has no self-intersections
//
// Available                         9.5
//-----------------------------------------------------------------------------------------------------------

[_public] int DoesSurfaceSelfIntersect_MESHUTIL(string,   // Geosurface file
                                                string);  // Primary Surface Name within Geosurface File


  
//-----------------------------------------------------------------------------------------------------------
// ExtractIsosurfaceFromVoxel_MESHUTIL Extracts isosurface from a voxel, and saves the voxel to a Geosurface file
//
// Available                           9.6
//-----------------------------------------------------------------------------------------------------------

[_public] void ExtractIsosurfaceFromVoxel_MESHUTIL(string,   // Voxel file
                                                   string,   // Geosurface file
                                                   string,   // Surface name within geosurface file
                                                   real,     // Minimum/higher value
                                                   real,     // Maximum/lower value
                                                   int);     // Closed option - create a closed surface?





//*** endblock Generated


#endif
