//*** extends 'class_empty.gxh'

#ifndef HDAT_GXH_DEFINED
#define HDAT_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class DAT
//
//-----------------------------------------------------------------------------------------------------------
//
// The DAT object is used to access data from an variety of data sources
// using the same access functions. The DAT interface supports data access
// on a point-by-point, of line-by-line basis.  For example,
// the Run_BIGRID function uses 2 DAT objects - one DAT associated with the
// input data source, which is read line-by-line, and a second associated with
// the output grid file output grid file.
// 
// Use a specific DAT creation method for an associated
// information source in order to make a DAT as required
// by a specific processing function.  The gridding methods all use DATs.
//
//-----------------------------------------------------------------------------------------------------------

//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// DAT_FILE Definitions
//
// Type of grid
//
// DAT_FILE_GRID
// 
//
// DAT_FILE_IMAGE
// 
//
//===========================================================================================================


#define DAT_FILE_GRID 1
#define DAT_FILE_IMAGE 2


//===========================================================================================================
//
// DAT_FILE_FORM Definitions
//
// Type of form
//
// DAT_FILE_FORM_OPEN
// 
//
// DAT_FILE_FORM_SAVE
// 
//
//===========================================================================================================


#define DAT_FILE_FORM_OPEN 0
#define DAT_FILE_FORM_SAVE 1


//===========================================================================================================
//
// DAT_XGD Definitions
//
// DAT Open modes
//
// DAT_XGD_READ
// 
//
// DAT_XGD_NEW
// 
//
// DAT_XGD_WRITE
// 
//
//===========================================================================================================


#define DAT_XGD_READ 0
#define DAT_XGD_NEW 1
#define DAT_XGD_WRITE 2





//===========================================================================================================
//
// Miscellaneous Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// CreateDB_DAT Create a handle to a database DAT object
//
// Returns      DAT Object
//
// Available    5.0
//-----------------------------------------------------------------------------------------------------------

[_public] DAT CreateDB_DAT(DB,       // Handle to database which DAT is connected with
                           string,   // Name of X channel in database
                           string,   // Name of Y channel in database
                           string);  // Name of Z channel in database


  
//-----------------------------------------------------------------------------------------------------------
// CreateXGD_DAT Create a handle to a grid file DAT object
//
// Returns       DAT Object
//
// Available     5.0
//-----------------------------------------------------------------------------------------------------------

[_public] DAT CreateXGD_DAT(string,   // Name of grid file to associate DAT with
                            int);     // DAT_XGD


  
//-----------------------------------------------------------------------------------------------------------
// Destroy_DAT Destroy a DAT.
//
// Available   5.0
//-----------------------------------------------------------------------------------------------------------

[_public] void Destroy_DAT(DAT);  // DAT to destroy.


  
//-----------------------------------------------------------------------------------------------------------
// GetLST_DAT Put available DAT filters and qualifiers in a LST
//
// Notes      The filters displayed in the Grid/Image file browse dialog are put
//            in the "Name" of the LST, while the file qualifiers are stored in
//            the "Value".
//
// Available  5.1.8
//-----------------------------------------------------------------------------------------------------------

[_public] void GetLST_DAT(LST,      // LST object to populate
                          string,   // DAT interface name ("XGD" only support option currently)
                          int,      // DAT_FILE
                          int);     // DAT_FILE_FORM


  
//-----------------------------------------------------------------------------------------------------------
// RangeXYZ_DAT Determine the range in X, Y and Z in the DAT source
//
// Notes        Terminates if unable to open an RPT DAT interface.
//
// Available    7.3
//-----------------------------------------------------------------------------------------------------------

[_public] void RangeXYZ_DAT(DAT,        // DAT object
                            var real,   // Minimum X (rMAX if none)
                            var real,   // Minimum Y (rMAX if none)
                            var real,   // Minimum Z (rMAX if none)
                            var real,   // Maximum X (rMIN if none)
                            var real,   // Maximum Y (rMIN if none)
                            var real,   // Maximum Z (rMIN if none)
                            var int);   // Number of non-dummy XYZ.





//*** endblock Generated


#endif
