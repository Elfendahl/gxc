//*** extends 'class_empty.gxh'

#ifndef H3DN_GXH_DEFINED
#define H3DN_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class 3DN
//
//-----------------------------------------------------------------------------------------------------------
//
// This class manages the rendering of a 3D view. It allows
// the positioning of the camera, specification of the zoom
// as well as some rendering controls for the axis. It is
// directly related to the MVIEW class.
//
//-----------------------------------------------------------------------------------------------------------



//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code





//===========================================================================================================
//
// Miscellaneous Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// Copy_3DN Copy one 3DN object to another.
//
// Available 5.1.2
//-----------------------------------------------------------------------------------------------------------

[_public] void Copy_3DN(H3DN,   // Destination 3DN to copy to
                        H3DN);  // Source 3DN to Copy from


  
//-----------------------------------------------------------------------------------------------------------
// Create_3DN Creates a 3DN.
//
// Returns    3DN Object
//
// Available  5.1.2
//-----------------------------------------------------------------------------------------------------------

[_public] H3DN Create_3DN();


  
//-----------------------------------------------------------------------------------------------------------
// Destroy_3DN Destroys a 3DN object.
//
// Available   5.1.2
//-----------------------------------------------------------------------------------------------------------

[_public] void Destroy_3DN(H3DN);  // 3DN Handle


  
//-----------------------------------------------------------------------------------------------------------
// GetPointOfView_3DN Get location of the point we are looking from
//
// Available          6.3
//-----------------------------------------------------------------------------------------------------------

[_public] void GetPointOfView_3DN(H3DN,       // 3DN Handle
                                  var real,   // Distance from center relative to longest grid dimension (which is 1.0)
                                  var real,   // Declination, 0 to 360 CW from Y
                                  var real);  // Inclination, -90 to +90


  
//-----------------------------------------------------------------------------------------------------------
// GetScale_3DN Get the axis relative scales.
//
// Available    6.3
//-----------------------------------------------------------------------------------------------------------

[_public] void GetScale_3DN(H3DN,       // 3DN Handle
                            var real,   // X Scale
                            var real,   // Y Scale
                            var real);  // Z Scale


  
//-----------------------------------------------------------------------------------------------------------
// iGetAxisColor_3DN Get the Axis draw color
//
// Returns           Axis Color
//
// Available         6.3
//-----------------------------------------------------------------------------------------------------------

[_public] int iGetAxisColor_3DN(H3DN);  // 3DN Handle


  
//-----------------------------------------------------------------------------------------------------------
// IGetAxisFont_3DN Get the Axis font
//
// Available        6.3
//-----------------------------------------------------------------------------------------------------------

[_public] void IGetAxisFont_3DN(H3DN,         // 3DN Handle
                                var string,   // Font name
                                int);         // Font Buffer Size
#define GetAxisFont_3DN(o3dn, font) IGetAxisFont_3DN(o3dn, font, sizeof(font))


  
//-----------------------------------------------------------------------------------------------------------
// iGetBackgroundColor_3DN Get the window background color
//
// Returns                 Background Color value
//
// Available               6.3
//-----------------------------------------------------------------------------------------------------------

[_public] int iGetBackgroundColor_3DN(H3DN);  // 3DN Handle


  
//-----------------------------------------------------------------------------------------------------------
// IGetRenderControls_3DN Get the rendering controls
//
// Available              6.3
//-----------------------------------------------------------------------------------------------------------

[_public] void IGetRenderControls_3DN(H3DN,         // 3DN Handle
                                      var int,      // Render Bounding Box (0 or 1)
                                      var int,      // Render Axis (0 or 1)
                                      var string,   // Label for X axis
                                      int,          // Size of X Buffer
                                      var string,   // Label for Y axis
                                      int,          // Size of Y Buffer
                                      var string,   // Label for Z axis
                                      int);         // Size of Z Buffer
#define GetRenderControls_3DN(o3dn, box, axis, label_x, label_y, label_z) IGetRenderControls_3DN(o3dn, box, axis, label_x, sizeof(label_x), label_y, sizeof(label_y), label_z, sizeof(label_z))


  
//-----------------------------------------------------------------------------------------------------------
// iGetShading_3DN Set the shading control on or off
//
// Returns         Shading On/Off
//
// Available       6.3
//-----------------------------------------------------------------------------------------------------------

[_public] int iGetShading_3DN(H3DN);  // 3DN Handle


  
//-----------------------------------------------------------------------------------------------------------
// _SetAxisColor_3DN Set the Axis draw color
//
// Available         5.1.6
//-----------------------------------------------------------------------------------------------------------

[_public] void _SetAxisColor_3DN(H3DN,   // 3DN Handle
                                 int);   // Axis Color
#define SetAxisColor_3DN _SetAxisColor_3DN


  
//-----------------------------------------------------------------------------------------------------------
// _SetAxisFont_3DN Set the Axis font
//
// Available        5.1.6
//-----------------------------------------------------------------------------------------------------------

[_public] void _SetAxisFont_3DN(H3DN,     // 3DN Handle
                                string);  // Font name
#define SetAxisFont_3DN _SetAxisFont_3DN


  
//-----------------------------------------------------------------------------------------------------------
// _SetBackgroundColor_3DN Set the window background color
//
// Available               5.1.6
//-----------------------------------------------------------------------------------------------------------

[_public] void _SetBackgroundColor_3DN(H3DN,   // 3DN Handle
                                       int);   // Background Color
#define SetBackgroundColor_3DN _SetBackgroundColor_3DN


  
//-----------------------------------------------------------------------------------------------------------
// SetPointOfView_3DN Set location of the point we are looking from
//
// Available          5.1.2
//-----------------------------------------------------------------------------------------------------------

[_public] void SetPointOfView_3DN(H3DN,   // 3DN Handle
                                  real,   // Distance from center relative to longest grid dimension (which is 1.0)
                                  real,   // Declination, 0 to 360 CW from Y
                                  real);  // Inclination, -90 to +90


  
//-----------------------------------------------------------------------------------------------------------
// SetRenderControls_3DN Set the rendering controls
//
// Available             5.1.2
//-----------------------------------------------------------------------------------------------------------

[_public] void SetRenderControls_3DN(H3DN,     // 3DN Handle
                                     int,      // Render Bounding Box (0 or 1)
                                     int,      // Render Axis (0 or 1)
                                     string,   // Label for X axis
                                     string,   // Label for Y axis
                                     string);  // Label for Z axis


  
//-----------------------------------------------------------------------------------------------------------
// SetScale_3DN Set the axis relative scales.
//
// Notes        By default all scales are equal (1.0). By setting
//              these scales, relative adjustments to the overall
//              view of the 3D objects can be made. Note that they
//              are relative to each other. Thus, setting the scaling
//              to 5,5,5 is the same as 1,1,1. This is typically used
//              to exaggerate one scale such as Z (1,1,5).
//
// Available    6.1
//-----------------------------------------------------------------------------------------------------------

[_public] void SetScale_3DN(H3DN,   // 3DN Handle
                            real,   // X Scale (default 1.0)
                            real,   // Y Scale (default 1.0)
                            real);  // Z Scale (default 1.0)


  
//-----------------------------------------------------------------------------------------------------------
// SetShading_3DN Set the shading control on or off
//
// Available      6.3
//-----------------------------------------------------------------------------------------------------------

[_public] void SetShading_3DN(H3DN,   // 3DN Handle
                              int);   // 0: Off, 1:  On.





//*** endblock Generated


#endif
