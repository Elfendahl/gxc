//*** extends 'class_empty.gxh'

#ifndef HVAU_GXH_DEFINED
#define HVAU_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class VAU
//
//-----------------------------------------------------------------------------------------------------------
//
// This is not a class. These are methods that work on
// data stored in VA objects
//
//-----------------------------------------------------------------------------------------------------------

//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// Define VAU_PRUNE
//
// Prune Options
//
// VAU_PRUNE_DUMMY
// 
//
// VAU_PRUNE_VALID
// 
//
//===========================================================================================================

#define VAU_PRUNE_DUMMY 0
#define VAU_PRUNE_VALID 1





//===========================================================================================================
//
// Miscellaneous
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// Prune_VAU Prune values from a VA based on reference VA
//
// Notes     Pruning will shorten the VA by removing values
//           that are either dummy or non-dummy in the reference
//           VA
//
// Available 5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void Prune_VAU(VA,    // VA to prune
                           VV,    // Reference VV
                           int);  // VAU_PRUNE


  
//-----------------------------------------------------------------------------------------------------------
// TotalVector_VAU Calculate total vector for X,Y and Z components
//
// Available       5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void TotalVector_VAU(VA,   // X Component object
                                 VA,   // Y Component object
                                 VA,   // Z Component object
                                 VA);  // Returned total vector VA object





//*** endblock Generated

#endif