//*** extends 'class_empty.gxh'

#ifndef HKML_GXH_DEFINED
#define HKML_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class KML
//
//-----------------------------------------------------------------------------------------------------------
//
// KML functions provide an interface KML (Keyhole markup language) files.
//
//-----------------------------------------------------------------------------------------------------------
// Notes
//
// None.
//
//-----------------------------------------------------------------------------------------------------------

//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// KML_ALT Definitions
//
// KML Altitude values.
//
// KML_ALT_CLAMPTOGROUND
// 
//
// KML_ALT_RELATIVETOGROUND
// 
//
// KML_ALT_ABSOLUTE
// 
//
//===========================================================================================================


#define KML_ALT_CLAMPTOGROUND 0
#define KML_ALT_RELATIVETOGROUND 1
#define KML_ALT_ABSOLUTE 2





//===========================================================================================================
//
// Miscellaneous Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// Import3DPolygon_KML Imports a KML 3D polygon into a provided view.
//
// Notes               Requirements -- The MVIEW must be 3D and valid (see iIsView3D_MVIEW);- The group name must not be null/empty;- The three VV for vector components must contain vertices, and be of equal length.
//
// Available           9.10
//-----------------------------------------------------------------------------------------------------------

[_public] int Import3DPolygon_KML(MVIEW,    // MVIEW object - the (3d) view to import the polygon into.
                                  string,   // The name of the resulting polygon group.
                                  VV,       // X Vertex Components - VV of GS_REAL
                                  VV,       // Y Vertex Components - VV of GS_REAL
                                  VV,       // Z Vertex Components - VV of GS_REAL
                                  int,      // The colour of the resulting surface - COL_ANY.
                                  int);     // Extrude the polygon to the base - BOOL.


  
//-----------------------------------------------------------------------------------------------------------
// Import3DLinePath_KML Imports a KML 3D LinePath into a provided view.
//
// Notes                Requirements -- The MVIEW must be 3D and valid (see iIsView3D_MVIEW);- The group name must not be null/empty;- The three VV for vector components must contain vertices, and be of equal length.
//
// Available            9.10
//-----------------------------------------------------------------------------------------------------------

[_public] int Import3DLinePath_KML(MVIEW,    // MVIEW object - the (3d) view to import the LinePath into.
                                   string,   // The name of the resulting LinePath group.
                                   VV,       // X Vertex Components - VV of GS_REAL
                                   VV,       // Y Vertex Components - VV of GS_REAL
                                   VV,       // Z Vertex Components - VV of GS_REAL
                                   int,      // The colour of the resulting surface - COL_ANY.
                                   int);     // Extrude the LinePath to the base - BOOL.





//*** endblock Generated


#endif
