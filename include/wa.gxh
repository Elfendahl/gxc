//*** extends 'class_empty.gxh'

#ifndef HWA_GXH_DEFINED
#define HWA_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class WA
//
//-----------------------------------------------------------------------------------------------------------
//
// The WA class enables you to access and write data to ASCII files.
//
//-----------------------------------------------------------------------------------------------------------

//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// Define WA_ENCODE
//
// WA Encode defines
//
// WA_ENCODE_ANSI
// Current Ansi Code Page (Conversion from UTF-8 data, if an exisiting BOM header found with WA_APPEND,
// encoding will switch to WA_ENCODE_UTF8)
//
// WA_ENCODE_RAW
// Write all data without any conversion check
//
// WA_ENCODE_UTF8
// UTF8 (If no exisiting BOM header found with WA_APPEND, encoding will switch to WA_ENCODE_ANSI)
//
// WA_ENCODE_UTF8_NOHEADER
// UTF8 w.o. header (will assume UTF8 encoding if WA_APPEND is used)
//
// WA_ENCODE_UTF16_NOHEADER
// UTF16 w.o. header (will assume UTF16 encoding if WA_APPEND is used)
//
//===========================================================================================================

#define WA_ENCODE_ANSI 0
#define WA_ENCODE_RAW 1
#define WA_ENCODE_UTF8 2
#define WA_ENCODE_UTF8_NOHEADER 3
#define WA_ENCODE_UTF16_NOHEADER 4


//===========================================================================================================
//
// Define WA_OPEN
//
// WA Open defines
//
// WA_NEW
// Create new file
//
// WA_APPEND
// Append to existing file
//
//===========================================================================================================

#define WA_NEW 0
#define WA_APPEND 1





//===========================================================================================================
//
// Miscellaneous
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// _Puts_WA Writes a string to the file.
//
// Available 5.0
//-----------------------------------------------------------------------------------------------------------

[_public] void _Puts_WA(WA,       // WA Object
                        string);  // String to write


  
//-----------------------------------------------------------------------------------------------------------
// Create_WA Creates an ASCII file to write to.
//
// Returns   WA Handle
//
// Notes     ANSI Encoding is assumed, See CreateEx_WA to override this.
//
// Available 5.0
//-----------------------------------------------------------------------------------------------------------

[_public] WA Create_WA(string,   // Name of the File
                       int);     // WA_OPEN


  
//-----------------------------------------------------------------------------------------------------------
// CreateEx_WA Creates an ASCII file to write to.
//
// Returns     WA Handle
//
// Notes       Before version 6.2. text in on the GX API level were handled as characters in the current ANSI code page
//             defining how characters above ASCII 127 would be displayed. 6.2. introduced Unicode in the core
//             montaj engine that greatly increased the number of symbols that can be used. The WA_ENCODE constants
//             were introduce that controls how text are written to files on disk with the WA class.
//
// Available   6.2
//-----------------------------------------------------------------------------------------------------------

[_public] WA CreateEx_WA(string,   // Name of the File
                         int,      // WA_OPEN
                         int);     // WA_ENCODE


  
//-----------------------------------------------------------------------------------------------------------
// CreateSBF_WA Creates an ASCII file to write to in an SBF.
//
// Returns      WA Handle
//
// Notes        See sbf.gxh. ANSI Encoding is assumed, See CreateSBFEx_WA to override this.
//
// Available    5.0
//-----------------------------------------------------------------------------------------------------------

[_public] WA CreateSBF_WA(SBF,      // Storage
                          string,   // Name of the File
                          int);     // WA_OPEN


  
//-----------------------------------------------------------------------------------------------------------
// CreateSBFEx_WA Creates an ASCII file to write to in an SBF.
//
// Returns        WA Handle
//
// Notes          Also see sbf.gxh
//                Before version 6.2. text in on the GX API level were handled as characters in the current ANSI code page
//                defining how characters above ASCII 127 would be displayed. 6.2. introduced Unicode in the core
//                montaj engine that greatly increased the number of symbols that can be used. The WA_ENCODE constants
//                were introduce that controls how text are written to files on disk with the WA class.
//
// Available      6.2
//-----------------------------------------------------------------------------------------------------------

[_public] WA CreateSBFEx_WA(SBF,      // Storage
                            string,   // Name of the File
                            int,      // WA_OPEN
                            int);     // WA_ENCODE


  
//-----------------------------------------------------------------------------------------------------------
// Destroy_WA Destroys a WA Object
//
// Available  5.0
//-----------------------------------------------------------------------------------------------------------

[_public] void Destroy_WA(WA);  // WA Object


  
//-----------------------------------------------------------------------------------------------------------
// NewLine_WA Forces a new line in the WA object.
//
// Available  5.0
//-----------------------------------------------------------------------------------------------------------

[_public] void NewLine_WA(WA);  // WA Object





//*** endblock Generated

#endif