//*** extends 'class_empty.gxh'

#ifndef HMULTIVOXSET_GXH_DEFINED
#define HMULTIVOXSET_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class MULTIVOXSET
//
//-----------------------------------------------------------------------------------------------------------
//
// High Performance 3D Grid.
//
//-----------------------------------------------------------------------------------------------------------

//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// DIRECTION3D Definitions
//
// Direction in 3D
//
// DIRECTION3D_XYZ
// XYZ
//
// DIRECTION3D_YXZ
// YXZ
//
// DIRECTION3D_XZY
// XZY
//
// DIRECTION3D_YZX
// YZX
//
// DIRECTION3D_ZXY
// ZXY
//
// DIRECTION3D_ZYX
// ZYX
//
//===========================================================================================================


#define DIRECTION3D_XYZ 0
#define DIRECTION3D_YXZ 1
#define DIRECTION3D_XZY 2
#define DIRECTION3D_YZX 3
#define DIRECTION3D_ZXY 4
#define DIRECTION3D_ZYX 5


//===========================================================================================================
//
// GOCAD_ORIENTATION Definitions
//
// GOCAD Orientations
//
// GOCAD_ORIENTATIONS_NORMAL
// Normal
//
// GOCAD_ORIENTATIONS_INVERTED
// Inverted (Z)
//
// GOCAD_ORIENTATIONS_NORMAL_ZFIRST
// Normal (ZFirst)
//
// GOCAD_ORIENTATIONS_INVERTED_ZFIRST
// Inverted (Z) (ZFirst)
//
//===========================================================================================================


#define GOCAD_ORIENTATIONS_NORMAL 0
#define GOCAD_ORIENTATIONS_INVERTED 1
#define GOCAD_ORIENTATIONS_NORMAL_ZFIRST 2
#define GOCAD_ORIENTATIONS_INVERTED_ZFIRST 3


//===========================================================================================================
//
// VECTOR_IMPORT Definitions
//
// Vector voxel import direction
//
// VECTOR_IMPORT_XYZ
// X, Y and Z
//
// VECTOR_IMPORT_UVW
// U, V and W
//
// VECTOR_IMPORT_AID
// Amplitude, Inclination and Declination
//
//===========================================================================================================


#define VECTOR_IMPORT_XYZ 0
#define VECTOR_IMPORT_UVW 1
#define VECTOR_IMPORT_AID 2


//===========================================================================================================
//
// FILTER3D Definitions
//
// Voxel filter type
//
// FILTER3D_FILE
// Specify a file containing the 27-point filter
//
// FILTER3D_SMOOTHING
// Smoothing filter
//
// FILTER3D_LAPLACE
// Laplace filter
//
// FILTER3D_X_GRADIENT
// X-Gradient filter
//
// FILTER3D_Y_GRADIENT
// Y-Gradient filter
//
// FILTER3D_Z_GRADIENT
// Z-Gradient filter
//
// FILTER3D_TOTAL_GRADIENT
// Total-Gradient filter
//
//===========================================================================================================


#define FILTER3D_FILE 0
#define FILTER3D_SMOOTHING 1
#define FILTER3D_LAPLACE 2
#define FILTER3D_X_GRADIENT 3
#define FILTER3D_Y_GRADIENT 4
#define FILTER3D_Z_GRADIENT 5
#define FILTER3D_TOTAL_GRADIENT 6


//===========================================================================================================
//
// MULTIVOXSET_DIRECTGRID_METHOD Definitions
//
// How to calculate the cell values for direct gridding.
//
// MULTIVOXSET_DIRECTGRID_MIN
// 
//
// MULTIVOXSET_DIRECTGRID_MAX
// 
//
// MULTIVOXSET_DIRECTGRID_MEAN
// 
//
//===========================================================================================================


#define MULTIVOXSET_DIRECTGRID_MIN 0
#define MULTIVOXSET_DIRECTGRID_MAX 1
#define MULTIVOXSET_DIRECTGRID_MEAN 2





//===========================================================================================================
//
// Miscellaneous Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// ImportFromXYZ_MULTIVOXSET Import XYZ file into a Multi-Voxset
//
// Available                 9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void ImportFromXYZ_MULTIVOXSET(string,   // Name of output Voxel file
                                         RA,       // RA To import from
                                         int,      // Data Type GS_TYPES
                                         IPJ);     // Projection


  
//-----------------------------------------------------------------------------------------------------------
// ExportToXYZ_MULTIVOXSET Export a MULTIVOXSET to an XYZ File
//
// Available               9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void ExportToXYZ_MULTIVOXSET(string,   // Input Voxel file
                                       string,   // File Name
                                       int,      // DIRECTION3D
                                       int,      // Reverse X?
                                       int,      // Reverse Y?
                                       int,      // Reverse Z?
                                       int);     // Write Dummies?


  
//-----------------------------------------------------------------------------------------------------------
// ExportToBinary_MULTIVOXSET Export contents of MULTIVOXSET to a Binary File.
//
// Available                  9.3
//-----------------------------------------------------------------------------------------------------------

[_licensed] void ExportToBinary_MULTIVOXSET(string,   // Input Voxel file
                                            string,   // Binary file to write to
                                            int,      // DIRECTION3D
                                            int,      // Reverse X?
                                            int,      // Reverse Y?
                                            int,      // Reverse Z?
                                            int,      // Swap Bytes?
                                            int);     // Output Type (Geosoft Type)


  
//-----------------------------------------------------------------------------------------------------------
// ExportToXML_MULTIVOXSET Export a MULTIVOXSET to XML
//
// Available               9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void ExportToXML_MULTIVOXSET(string,   // Voxel file
                                       string);  // XML file


  
//-----------------------------------------------------------------------------------------------------------
// CheckEqualToLegacyVoxel_MULTIVOXSET Compare MULTIVOXSET to Legacy Voxel
//
// Available                           9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void CheckEqualToLegacyVoxel_MULTIVOXSET(string,   // Voxel file
                                                   string);  // Legacy Voxel file


  
//-----------------------------------------------------------------------------------------------------------
// ImportFromUBC_MULTIVOXSET Import UBC file into a MultiVoxset
//
// Available                 9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void ImportFromUBC_MULTIVOXSET(string,   // Name of output VOX
                                         string,   // Name of UBC Mesh File
                                         string,   // Name of UBC Mod File
                                         real,     // Dummy Value
                                         IPJ);     // Projection


  
//-----------------------------------------------------------------------------------------------------------
// ImportFromGOCAD_MULTIVOXSET Imports a MultiVoxset from a GOCAD File
//
// Available                   9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void ImportFromGOCAD_MULTIVOXSET(string,   // Name of output VOX
                                           string,   // Name of GOCAD Voxel file
                                           string,   // Propert name to import
                                           IPJ,      //
                                           int);     // GOCAD_ORIENTATION


  
//-----------------------------------------------------------------------------------------------------------
// ListPropertiesGOCAD_MULTIVOXSET List all the properties available in this GOCAD file.
//
// Available                       9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void ListPropertiesGOCAD_MULTIVOXSET(string,   // Name of GOCAD Voxel file
                                               LST);     // List object to populate


  
//-----------------------------------------------------------------------------------------------------------
// ImportFromGDB_MULTIVOXSET Imports from a Geosoft Database
//
// Available                 9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void ImportFromGDB_MULTIVOXSET(string,    // Name of output Voxel file
                                         DB,        // DB To import from
                                         DB_SYMB);  // Symbol to import data from


  
//-----------------------------------------------------------------------------------------------------------
// ImportFromVectorGDB_MULTIVOXSET Imports from a Vector Geosoft Database
//
// Available                       9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void ImportFromVectorGDB_MULTIVOXSET(string,    // Voxel Name
                                               DB,        // DB To import from
                                               int,       // VECTOR_IMPORTImport XYZ, UVW or Amplitude/Inclination/Declination channels
                                               DB_SYMB,   // Symbol to import X, U or Amplitude data from
                                               DB_SYMB,   // Symbol to import Y, V or Inclination data from
                                               DB_SYMB,   // Symbol to import Z, W or Declination data from
                                               real,      // Inclination value for VOX_VECTORVOX_UVW (-90° to 90°)
                                               real);     // Declination value for VOX_VECTORVOX_UVW (-180° to 180°)


  
//-----------------------------------------------------------------------------------------------------------
// ExportToSEGY_MULTIVOXSET Export To SEGY
//
// Available                9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void ExportToSEGY_MULTIVOXSET(string,   // Input Voxel file
                                        string,   // Voxel Name
                                        string,   // Output Segy file
                                        real);    // Sampling Internal


  
//-----------------------------------------------------------------------------------------------------------
// ExportToGDB_MULTIVOXSET Export To GDB
//
// Available               9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void ExportToGDB_MULTIVOXSET(string,   // Input Voxel file
                                       DB,       // Database
                                       string,   // Channel Name
                                       int,      // DIRECTION3D
                                       int,      // Reverse X?
                                       int,      // Reverse Y?
                                       int,      // Reverse Z?
                                       int);     // Write Dummies?


  
//-----------------------------------------------------------------------------------------------------------
// ExportToWA_MULTIVOXSET Export To GDB
//
// Available              9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void ExportToWA_MULTIVOXSET(string,   // Input Voxel file
                                      WA,       // WA File
                                      int,      // DIRECTION3D
                                      int,      // Reverse X?
                                      int,      // Reverse Y?
                                      int,      // Reverse Z?
                                      string);  // The Dummy string to write


  
//-----------------------------------------------------------------------------------------------------------
// ConvertDoubleToVector_MULTIVOXSET Convert 3 Double Voxels to a Vector Voxel
//
// Available                         9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void ConvertDoubleToVector_MULTIVOXSET(string,   // Input X Voxel file
                                                 string,   // Input Y Voxel file
                                                 string,   // Input Z Voxel file
                                                 string,   // Output Vector Voxel file
                                                 real,     // Inclination
                                                 real,     // Declination
                                                 int);     // Rotated?


  
//-----------------------------------------------------------------------------------------------------------
// ConvertVectorToDouble_MULTIVOXSET Convert a Vector Voxel to 3 double Voxels
//
// Available                         9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void ConvertVectorToDouble_MULTIVOXSET(string,   // Input Vector Voxel file
                                                 string,   // Output X Voxel file
                                                 string,   // Output Y Voxel file
                                                 string,   // Output Z Voxel file
                                                 int);     // Rotated?


  
//-----------------------------------------------------------------------------------------------------------
// ConvertThematicToDouble_MULTIVOXSET Convert Thematic MultiVoxset to Double MultiVoxset
//
// Available                           9.4
//-----------------------------------------------------------------------------------------------------------

[_public] void ConvertThematicToDouble_MULTIVOXSET(string,   // Input voxel filename
                                                   VV,       // Translation VV handle
                                                   string);  // Output voxel filename


  
//-----------------------------------------------------------------------------------------------------------
// ConvertDoubleToThematic_MULTIVOXSET Convert Double MultiVoxset to Thematic MultiVoxset
//
// Available                           9.4
//-----------------------------------------------------------------------------------------------------------

[_public] void ConvertDoubleToThematic_MULTIVOXSET(string,   // Input voxel filename
                                                   VV,       // Translation VV handle
                                                   string);  // Output voxel filename


  
//-----------------------------------------------------------------------------------------------------------
// ConvertVelocityToDensity_MULTIVOXSET Convert Velocity MultiVoxset to Density MultiVoxset
//
// Available                            9.4
//-----------------------------------------------------------------------------------------------------------

[_public] void ConvertVelocityToDensity_MULTIVOXSET(string,   // Input voxel filename
                                                    real,     // 1.0, if this voxel is in meters per second. Otherwise, a value by which each input cell is multiplied to convert it into meters per second.
                                                    real,     // Lower bound on velocity values, in meters per second. If the input value (after being pre-multiplied by dInputScalingFactor) is less than this value, the output cell value will be DUMMY.
                                                    real,     // Upper bound on velocity values, in meters per second. If the input value (after being pre-multiplied by dInputScalingFactor) is greater than this value, the output cell value will be DUMMY.
                                                    real,     // Coefficient of fifth-order polynomial term.
                                                    real,     // Coefficient of fourth-order polynomial term.
                                                    real,     // Coefficient of third-order polynomial term.
                                                    real,     // Coefficient of second-order polynomial term.
                                                    real,     // Coefficient of first-order polynomial term.
                                                    real,     // Constant offset of output.
                                                    real,     // 1.0, to produce an output voxel that has units of g/cm^3. If different units are desired, pass in a different value, which will be multiplied into each output voxel cell.
                                                    string);  // Output voxel filename


  
//-----------------------------------------------------------------------------------------------------------
// ConvertDensityToVelocity_MULTIVOXSET Convert Density MultiVoxset to Velocity MultiVoxset
//
// Available                            9.4
//-----------------------------------------------------------------------------------------------------------

[_public] void ConvertDensityToVelocity_MULTIVOXSET(string,   // Input voxel filename
                                                    real,     // 1.0, if this voxel is in meters per second. Otherwise, a value by which each input cell is multiplied to convert it into meters per second.
                                                    real,     // Lower bound on velocity values, in meters per second. If the input value (after being pre-multiplied by dInputScalingFactor) is less than this value, the output cell value will be DUMMY.
                                                    real,     // Upper bound on velocity values, in meters per second. If the input value (after being pre-multiplied by dInputScalingFactor) is greater than this value, the output cell value will be DUMMY.
                                                    real,     // Coefficient of fifth-order polynomial term.
                                                    real,     // Coefficient of fourth-order polynomial term.
                                                    real,     // Coefficient of third-order polynomial term.
                                                    real,     // Coefficient of second-order polynomial term.
                                                    real,     // Coefficient of first-order polynomial term.
                                                    real,     // Constant offset of output.
                                                    real,     // 1.0, to produce an output voxel that has units of g/cm^3. If different units are desired, pass in a different value, which will be multiplied into each output voxel cell.
                                                    string);  // Output voxel filename


  
//-----------------------------------------------------------------------------------------------------------
// GetGOCADLocation_MULTIVOXSET Get the location of a voxel with origin and scaled xyz vectors for use with GOCAD.
//
// Available                    9.4
//-----------------------------------------------------------------------------------------------------------

[_public] void GetGOCADLocation_MULTIVOXSET(string,     // Input voxel filename
                                            var real,   // Origin X
                                            var real,   // Origin Y
                                            var real,   // Origin Z
                                            var real,   // VectX X
                                            var real,   // VectX Y
                                            var real,   // VectX Z
                                            var real,   // VectY X
                                            var real,   // VectY Y
                                            var real,   // VectY Z
                                            var real,   // VectZ X
                                            var real,   // VectZ Y
                                            var real);  // VectZ Z


  
//-----------------------------------------------------------------------------------------------------------
// ConvertToPG_MULTIVOXSET Convert MultiVoxset to PG
//
// Returns                 PG Object
//
// Available               9.4
//-----------------------------------------------------------------------------------------------------------

[_public] PG ConvertToPG_MULTIVOXSET(string);  // Input voxel filename


  
//-----------------------------------------------------------------------------------------------------------
// CreateDoubleConstant_MULTIVOXSET Generate a double MultiVoxset with a constant value
//
// Available                        9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void CreateDoubleConstant_MULTIVOXSET(string,   // Name of output Voxel File
                                                real,     // Constant Value to use - DUMMY for a trully sparse voxel
                                                real,     // Origin X
                                                real,     // Origin Y
                                                real,     // Origin Z
                                                real,     // Cell Size X
                                                real,     // Cell Size Y
                                                real,     // Cell Size Z
                                                int,      // Cell Count X
                                                int,      // Cell Count Y
                                                int,      // Cell Count Z
                                                IPJ);     // Projection


  
//-----------------------------------------------------------------------------------------------------------
// CreateThematicConstant_MULTIVOXSET Generate a double MultiVoxset with a constant value
//
// Available                          9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void CreateThematicConstant_MULTIVOXSET(string,   // Name of output Voxel File
                                                  int,      // Constant Value to use - DUMMY for a trully sparse voxel
                                                  real,     // Origin X
                                                  real,     // Origin Y
                                                  real,     // Origin Z
                                                  real,     // Cell Size X
                                                  real,     // Cell Size Y
                                                  real,     // Cell Size Z
                                                  int,      // Cell Count X
                                                  int,      // Cell Count Y
                                                  int,      // Cell Count Z
                                                  IPJ);     // Projection


  
//-----------------------------------------------------------------------------------------------------------
// CreateVectorConstant_MULTIVOXSET Generate a double MultiVoxset with a constant value
//
// Available                        9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void CreateVectorConstant_MULTIVOXSET(string,   // Name of output Voxel File
                                                real,     // X Constant Value to use - DUMMY for a trully sparse voxel
                                                real,     // Y Constant Value to use - DUMMY for a trully sparse voxel
                                                real,     // Z Constant Value to use - DUMMY for a trully sparse voxel
                                                real,     // Origin X
                                                real,     // Origin Y
                                                real,     // Origin Z
                                                real,     // Cell Size X
                                                real,     // Cell Size Y
                                                real,     // Cell Size Z
                                                int,      // Cell Count X
                                                int,      // Cell Count Y
                                                int,      // Cell Count Z
                                                IPJ);     // Projection


  
//-----------------------------------------------------------------------------------------------------------
// CreateDoubleConstantVV_MULTIVOXSET Generate a double MultiVoxset with a constant value and non-uniform cell sizes
//
// Available                          9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void CreateDoubleConstantVV_MULTIVOXSET(string,   // Name of output Voxel
                                                  real,     // The contant Value to fill with - DUMMY for a trully sparse voxel
                                                  real,     // Origin X
                                                  real,     // Origin Y
                                                  real,     // Origin Z
                                                  VV,       // Cell Sizes X
                                                  VV,       // Cell Sizes Y
                                                  VV,       // Cell Sizes Z
                                                  IPJ);     // Projection


  
//-----------------------------------------------------------------------------------------------------------
// CreateThematicConstantVV_MULTIVOXSET Generate a double MultiVoxset with a constant value and non-uniform cell sizes
//
// Available                            9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void CreateThematicConstantVV_MULTIVOXSET(string,   // Name of output Voxel
                                                    int,      // The contant Value to fill with - DUMMY for a trully sparse voxel
                                                    real,     // Origin X
                                                    real,     // Origin Y
                                                    real,     // Origin Z
                                                    VV,       // Cell Sizes X
                                                    VV,       // Cell Sizes Y
                                                    VV,       // Cell Sizes Z
                                                    IPJ);     // Projection


  
//-----------------------------------------------------------------------------------------------------------
// CreateVectorConstantVV_MULTIVOXSET Generate a double MultiVoxset with a constant value and non-uniform cell sizes
//
// Available                          9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void CreateVectorConstantVV_MULTIVOXSET(string,   // Name of output Voxel
                                                  real,     // The X contant Value to fill with - DUMMY for a trully sparse voxel
                                                  real,     // The Y contant Value to fill with - DUMMY for a trully sparse voxel
                                                  real,     // The Z contant Value to fill with - DUMMY for a trully sparse voxel
                                                  real,     // Origin X
                                                  real,     // Origin Y
                                                  real,     // Origin Z
                                                  VV,       // Cell Sizes X
                                                  VV,       // Cell Sizes Y
                                                  VV,       // Cell Sizes Z
                                                  IPJ);     // Projection


  
//-----------------------------------------------------------------------------------------------------------
// ExportToVoxel_MULTIVOXSET Exports a Multi-Voxset into a Voxel
//
// Available                 9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void ExportToVoxel_MULTIVOXSET(string,   // Project file
                                         string,   // Multi-Voxset UUID
                                         string,   // Multi-Voxset attribute
                                         string);  // Output Voxel file


  
//-----------------------------------------------------------------------------------------------------------
// ImportFromVoxel_MULTIVOXSET Import a Voxel directly into a Multi-Voxset
//
// Available                   9.3
//-----------------------------------------------------------------------------------------------------------

[_public] void ImportFromVoxel_MULTIVOXSET(string,       // Project file
                                           string,       // Input Voxel file
                                           string,       // Multi-Voxset attribute
                                           var string,   // UUID string returned
                                           int);         // Size of UUID string
#define mportFromVoxel_MULTIVOXSET(project_file, voxel_file, multi_voxset_attribute, p_uuid_string) ImportFromVoxel_MULTIVOXSET(project_file, voxel_file, multi_voxset_attribute, p_uuid_string, sizeof(p_uuid_string))


  
//-----------------------------------------------------------------------------------------------------------
// ImportFromDATAMINE_MULTIVOXSET Create a Geosoft Voxel file from a Datamine block model file.
//
// Notes                          Create a Geosoft Voxel file from a Datamine block model file.
//
// Available                      9.3
//-----------------------------------------------------------------------------------------------------------

[_licensed] void ImportFromDATAMINE_MULTIVOXSET(string,   // Datamine file name
                                                string,   // Field to use for data
                                                IPJ,      // Projection to set
                                                string);  // Output voxel file name


  
//-----------------------------------------------------------------------------------------------------------
// rComputeDefaultCellSize_MULTIVOXSET Used if the user does not provide a default cell size.
//
// Returns                             Default Cell Size
//
// Notes                               Compute a default cell size for a voxel given a data range.
//
// Available                           9.3
//-----------------------------------------------------------------------------------------------------------

[_licensed] real rComputeDefaultCellSize_MULTIVOXSET(real,   // MinX
                                                     real,   // MaxX
                                                     real,   // MinY
                                                     real,   // MaxY
                                                     real,   // MinZ
                                                     real);  // MaxZ


  
//-----------------------------------------------------------------------------------------------------------
// Filter_MULTIVOXSET Apply a 3D filter to a voxel.
//
// Available          9.3
//-----------------------------------------------------------------------------------------------------------

[_licensed] void Filter_MULTIVOXSET(string,   // Name of the input voxel
                                    string,   // Name of the output voxel
                                    int,      // FILTER3D
                                    string,   // Filter file, if filter is VOX_FILTER3D_FILE
                                    int,      // Number of filter passes
                                    int);     // (1: interpolate dummies)


  
//-----------------------------------------------------------------------------------------------------------
// GenerateRBF_MULTIVOXSET Creates a VOXEL from an database using RBF.
//
// Available               9.4
//-----------------------------------------------------------------------------------------------------------

[_licensed] void GenerateRBF_MULTIVOXSET(DB,       // Handle to a database
                                         string,   // Name of the output voxel
                                         string,   // Channel to grid`
                                         real);    // Cell size


  
//-----------------------------------------------------------------------------------------------------------
// GridDirectFromGDB_MULTIVOXSET Create a voxel using direct gridding.
//
// Notes                         The Z and Data channels may be array channels. If they are, the array sizes must match.
//
// Available                     9.3
//-----------------------------------------------------------------------------------------------------------

[_licensed] void GridDirectFromGDB_MULTIVOXSET(string,    // Output voxel filename
                                               real,      // Voxel origin X
                                               real,      // Voxel origin Y
                                               real,      // Voxel origin Z
                                               int,       // Voxel cell count X
                                               int,       // Voxel cell count Y
                                               int,       // Voxel cell count Z
                                               real,      // Voxel cell size X
                                               real,      // Voxel cell size Y
                                               real,      // Voxel cell size Z
                                               int,       // MULTIVOXSET_DIRECTGRID_METHOD
                                               DB,        // Database
                                               DB_SYMB,   // X channel [DB_LOCK_READONLY]
                                               DB_SYMB,   // Y channel [DB_LOCK_READONLY]
                                               DB_SYMB,   // Z channel [DB_LOCK_READONLY]
                                               DB_SYMB);  // Data channel [DB_LOCK_READONLY]





//*** endblock Generated


#endif
