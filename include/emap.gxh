//*** extends 'class_empty.gxh'

#ifndef HEMAP_GXH_DEFINED
#define HEMAP_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class EMAP
//
//-----------------------------------------------------------------------------------------------------------
//
// The EMAP class provides access to a map as displayed within
// Oasis montaj, but (usually) does not change data within the map itself.
// It performs functions such as setting the currently displayed area,
// or drawing "tracking" lines or boxes on the map (which are not
// part of the map itself).
//
//-----------------------------------------------------------------------------------------------------------
// Notes
//
// To obtain access to the map itself, it is recommended practice
// to begin with an EMAP object, and use the Lock_EMAP function to
// lock the underlying map to prevent external changes. The returned
// MAP object (see MAP) may then be safely used to make changes to the map itself.
// 
// MAP Redraw Rules:
// 
//     1. Redraws only occur at the end of the proccess (GX or SCRIPT) not during.
//        You can safely call other GX's and the map will not redraw. If you need the
//        map to redraw immediately use Redraw_EMAP instead.
//     2. If the final GX calls Cancel_SYS, the map redraw is not done. If you
//        need to force a redraw when the user hits cancel use the Redraw_EMAP function.
//     3. You can set the redraw flag to EMAP_REDRAW_YES or EMAP_REDRAW_NO at any
//         time using SetRedrawFlag_EMAP. This flag will only be looked at, when
//         the last call to UnLock_EMAP occurs and is ignored on a Cancel_SYS.
//     4. Redraw_EMAP only works if the current map is not locked. It will do nothing
//        if the map is locked.  Issue an UnLock_EMAP before using this function.
// 
// 
// VIRTUAL EMAP SUPPORT
// 
// These methods are only available when running in an external application.
// They allow the GX to open a MAP and then create a Virtual EMAP from that
// map. The GX can then call MakeCurrent_EMAP and set the current EMAP so
// that code that follows sees this map as the current MAP.
// 
// Supported methods on Virtual EMAPS are:
// 
//     | Current_EMAP
//     | CurrentNoActivate_EMAP
//     | MakeCurrent_EMAP
//     | iHaveCurrent_EMAP
//     | CurrentIfExists_EMAP
//     | Current_MAP
//     | Lock_EMAP
//     | UnLock_EMAP
//     | iIsLocked_EMAP
//     | IGetName_EMAP
//     | SetRedrawFlag_EMAP
//     | Redraw_EMAP
//     | iLoaded_EMAP
//     | Load_EMAP
//     | LoadNoActivate_EMAP
//     | UnLoadVerify_EMAP
//     | UnLoad_EMAP
//     | CreateVirtual_EMAP
//
//-----------------------------------------------------------------------------------------------------------

//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// Define EMAP_FONT
//
// Font Types
//
// EMAP_FONT_TT
// 
//
// EMAP_FONT_GFN
// 
//
//===========================================================================================================

#define EMAP_FONT_TT 0
#define EMAP_FONT_GFN 1


//===========================================================================================================
//
// Define EMAP_PATH
//
// Four forms
//
// EMAP_PATH_FULL
// d:\directory\file.gdb
//
// EMAP_PATH_DIR
// \directory\file.gdb
//
// EMAP_PATH_NAME_EXT
// File.gdb
//
// EMAP_PATH_NAME
// File
//
//===========================================================================================================

#define EMAP_PATH_FULL 0
#define EMAP_PATH_DIR 1
#define EMAP_PATH_NAME_EXT 2
#define EMAP_PATH_NAME 3


//===========================================================================================================
//
// Define EMAP_REDRAW
//
// Redraw Options
//
// EMAP_REDRAW_NO
// 
//
// EMAP_REDRAW_YES
// 
//
//===========================================================================================================

#define EMAP_REDRAW_NO 0
#define EMAP_REDRAW_YES 1


//===========================================================================================================
//
// Define EMAP_REMOVE
//
// How to handle pending changes in document
//
// EMAP_REMOVE_SAVE
// 
//
// EMAP_REMOVE_PROMPT
// 
//
// EMAP_REMOVE_DISCARD
// 
//
//===========================================================================================================

#define EMAP_REMOVE_SAVE 0
#define EMAP_REMOVE_PROMPT 1
#define EMAP_REMOVE_DISCARD 2


//===========================================================================================================
//
// Define EMAP_TRACK
//
// Tracking Options
//
// EMAP_TRACK_ERASE
// Erase Object after you return?
//
// EMAP_TRACK_RMENU
// Allow use of right-menu
//
// EMAP_TRACK_CYCLE
// If user holds down left-mouse, will return many times
//
//===========================================================================================================

#define EMAP_TRACK_ERASE 1
#define EMAP_TRACK_RMENU 2
#define EMAP_TRACK_CYCLE 4


//===========================================================================================================
//
// Define EMAP_VIEWPORT
//
// Tracking Options
//
// EMAP_VIEWPORT_NORMAL
// Normal map usage
//
// EMAP_VIEWPORT_BROWSEZOOM
// Zoom Mode
//
// EMAP_VIEWPORT_BROWSEAOI
// Change Area Of Interest Mode
//
//===========================================================================================================

#define EMAP_VIEWPORT_NORMAL 0
#define EMAP_VIEWPORT_BROWSEZOOM 1
#define EMAP_VIEWPORT_BROWSEAOI 2


//===========================================================================================================
//
// Define EMAP_WINDOW_POSITION
//
// Window Positioning Options
//
// EMAP_WINDOW_POSITION_DOCKED
// 
//
// EMAP_WINDOW_POSITION_FLOATING
// 
//
//===========================================================================================================

#define EMAP_WINDOW_POSITION_DOCKED 0
#define EMAP_WINDOW_POSITION_FLOATING 1


//===========================================================================================================
//
// Define EMAP_WINDOW_STATE
//
// Window State Options
//
// EMAP_WINDOW_RESTORE
// 
//
// EMAP_WINDOW_MINIMIZE
// 
//
// EMAP_WINDOW_MAXIMIZE
// 
//
//===========================================================================================================

#define EMAP_WINDOW_RESTORE 0
#define EMAP_WINDOW_MINIMIZE 1
#define EMAP_WINDOW_MAXIMIZE 2


//===========================================================================================================
//
// Define LAYOUT_VIEW_UNITS
//
// Base dlayout display units
//
// LAYOUT_VIEW_MM
// Millimeters
//
// LAYOUT_VIEW_CM
// Centimeters
//
// LAYOUT_VIEW_IN
// Inches
//
//===========================================================================================================

#define LAYOUT_VIEW_MM 0
#define LAYOUT_VIEW_CM 1
#define LAYOUT_VIEW_IN 2





//===========================================================================================================
//
// Drag-and-drop methods
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// App_DropMapClipData_EMAP Drop Map clipboard data on this EMAP
//
// Available                5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_DropMapClipData_EMAP(EMAP,   // EMAP object
                                            int);   // Handle to Global Clipboard data


  
//-----------------------------------------------------------------------------------------------------------
// App_iDragDropEnabled_EMAP Checks if drag-and-drop enabled for the map
//
// Available                 5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iDragDropEnabled_EMAP(EMAP);  // EMAP object


  
//-----------------------------------------------------------------------------------------------------------
// App_SetDragDropEnabled_EMAP Set whether drag-and-drop is enabled for the map.
//
// Available                   5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_SetDragDropEnabled_EMAP(EMAP,   // EMAP object
                                               int);   // Enables/disables drag-and-drop



//===========================================================================================================
//
// Drawing
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// App_CopyToClip_EMAP Copy entire map to clipboard.
//
// Notes               Four objects are placed on the clipboard:
//                     
//                         1. Georefernce Text
//                         2. Bitmap of current window screen resolution
//                         3. EMF of current window screen resolution
//                         4. Entire map as a Geosoft View (go to view mode and hit paste). The coordinates are placed
//                            in the current view coordinates.
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_CopyToClip_EMAP(EMAP);  // EMAP object


  
//-----------------------------------------------------------------------------------------------------------
// App_DrawLine_EMAP Draws a line on the current map.
//
// Notes             Locations are in the current view user units.
//                   
//                   The line is temporary and will disappear on the next
//                   screen refresh.  This function is for you to provide
//                   interactive screen feedback to your user.
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_DrawLine_EMAP(EMAP,   // EMAP object
                                     real,   // X1
                                     real,   // Y1
                                     real,   // X2
                                     real);  // Y2


  
//-----------------------------------------------------------------------------------------------------------
// App_DrawRect_EMAP Draws a rect on the current map.
//
// Notes             Locations are in the current view user units.
//                   
//                   The line is temporary and will disappear on the next
//                   screen refresh.  This function is for you to provide
//                   interactive screen feedback to your user.
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_DrawRect_EMAP(EMAP,   // EMAP object
                                     real,   // X1
                                     real,   // Y1
                                     real,   // X2
                                     real);  // Y2


  
//-----------------------------------------------------------------------------------------------------------
// App_DrawRect3D_EMAP Plot a square symbol on a section view.
//
// Notes               Plot a square symbol on a section view, but input 3D user coordinates
//                     
//                     The line is temporary and will disappear on the next
//                     screen refresh.  This function is for you to provide
//                     interactive screen feedback to your user.
//
// Available           9.1
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_DrawRect3D_EMAP(EMAP,   // EMAP object
                                       real,   // X - True X location
                                       real,   // Y - True Y location
                                       real,   // Z - True Z location
                                       int);   // Size in pixels ("radius")


  
//-----------------------------------------------------------------------------------------------------------
// App_GetDisplayArea_EMAP Get the area you are currently looking at.
//
// Notes                   Coordinates are based on the current view units.
//                         For 3D views this will return the full map extents.
//
// Available               5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_GetDisplayArea_EMAP(EMAP,       // EMAP object
                                           var real,   // X Min returned
                                           var real,   // Y Min returned
                                           var real,   // X Max returned
                                           var real);  // Y Max returned


  
//-----------------------------------------------------------------------------------------------------------
// App_GetDisplayAreaRaw_EMAP Get the area you are currently looking at in raw map units
//
// Notes                      Coordinates are in millimeters.
//                            For 3D views this will return the full map extents.
//
// Available                  5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_GetDisplayAreaRaw_EMAP(EMAP,       // EMAP object
                                              var real,   // X Min returned
                                              var real,   // Y Min returned
                                              var real,   // X Max returned
                                              var real);  // Y Max returned


  
//-----------------------------------------------------------------------------------------------------------
// App_GetMapLayoutProps_EMAP Get the base layout view properties.
//
// Notes                      This affects the display units and other related properties for the base
//                            view of a map.
//
// Available                  5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_GetMapLayoutProps_EMAP(EMAP,       // EMAP object
                                              var int,    // Snap to grid
                                              var real,   // Snapping distance (always in mm)
                                              var int,    // View Grid
                                              var int,    // View Rulers
                                              var int,    // LAYOUT_VIEW_UNITS View Units
                                              var int,    // Grid Red Component (0-255)
                                              var int,    // Grid Green Component (0-255)
                                              var int);   // Grid Blue Component (0-255)


  
//-----------------------------------------------------------------------------------------------------------
// App_GetMapSnap_EMAP Get current snapping distance in MM
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_GetMapSnap_EMAP(EMAP,       // EMAP object
                                       var real);  // Snap value in MM (returned)


  
//-----------------------------------------------------------------------------------------------------------
// App_iGetWindowState_EMAP Retrieve the current state of the map window
//
// Returns                  EMAP_WINDOW_STATE
//
// Available                5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iGetWindowState_EMAP(EMAP);  //


  
//-----------------------------------------------------------------------------------------------------------
// App_SetDisplayArea_EMAP Set the area you wish to see.
//
// Notes                   Coordinates are based on the current view user units.
//                         The map is immediatly redrawn.
//
// Available               5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_SetDisplayArea_EMAP(EMAP,   // EMAP object
                                           real,   // X Min
                                           real,   // Y Min
                                           real,   // X Max
                                           real);  // Y Max


  
//-----------------------------------------------------------------------------------------------------------
// App_SetMapLayoutProps_EMAP Set the base layout view properties.
//
// Notes                      This affects the display units and other related properties for the base
//                            view of a map.
//
// Available                  5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_SetMapLayoutProps_EMAP(EMAP,   // EMAP object
                                              int,    // Snap to grid
                                              real,   // Snapping distance (always in mm)
                                              int,    // View Grid
                                              int,    // View Rulers
                                              int,    // LAYOUT_VIEW_UNITS View Units
                                              int,    // Grid Red Component (0-255)
                                              int,    // Grid Green Component (0-255)
                                              int);   // Grid Blue Component (0-255)


  
//-----------------------------------------------------------------------------------------------------------
// App_SetMapSnap_EMAP Set current snapping distance in MM
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_SetMapSnap_EMAP(EMAP,   // EMAP object
                                       real);  // Snap value in MM


  
//-----------------------------------------------------------------------------------------------------------
// App_SetWindowState_EMAP Changes the state of the map window
//
// Available               5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_SetWindowState_EMAP(EMAP,   //
                                           int);   // EMAP_WINDOW_STATE



//===========================================================================================================
//
// General
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// App_iPackedFiles_EMAP The number of packed files in the map.
//
// Returns               The number of packed files in map.
//
// Available             9.2
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iPackedFiles_EMAP(EMAP);  // EMAP object


  
//-----------------------------------------------------------------------------------------------------------
// App_ActivateGroup_EMAP Activates a group and associated tools.
//
// Notes                  Activating a group basically enters the edit mode associated
//                        with the type of group. E.g. a vector group will enable the
//                        edit toolbar for that gorup and an AGG will bring up the
//                        image color tool. Be sure to pass a combined name containing
//                        both the view name and the group separated by a "/" or "\".
//
// Available              5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_ActivateGroup_EMAP(EMAP,     // EMAP object
                                          string);  // "View/Group"


  
//-----------------------------------------------------------------------------------------------------------
// App_ActivateView_EMAP Activates a view and associated tools.
//
// Available             5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_ActivateView_EMAP(EMAP,     // EMAP object
                                         string);  // "View"


  
//-----------------------------------------------------------------------------------------------------------
// App_Current_EMAP This method returns the Current Edited map.
//
// Returns          EMAP Object
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] EMAP App_Current_EMAP();


  
//-----------------------------------------------------------------------------------------------------------
// App_CurrentNoActivate_EMAP This method returns the Current Edited map.
//
// Returns                    EMAP Object
//
// Notes                      This function acts just like Current_EMAP except that the document is not activated (brought to foreground) and no
//                            guarantee is given about which document is currently active.
//
// Available                  9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] EMAP App_CurrentNoActivate_EMAP();


  
//-----------------------------------------------------------------------------------------------------------
// App_CurrentIfExists_EMAP This method returns the Current Edited map.
//
// Returns                  EMAP Object to current edited map. If there is no current map,
//                          the user is not prompted for a map, and 0 is returned.
//
// Available                5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] EMAP App_CurrentIfExists_EMAP();


  
//-----------------------------------------------------------------------------------------------------------
// App_Destroy_EMAP Destroy EMAP handle.
//
// Notes            This does not unload the map, it simply deletes the gx resource handle
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_Destroy_EMAP(EMAP);  // EMAP to destroy


  
//-----------------------------------------------------------------------------------------------------------
// App_DestroyView_EMAP Removes the view from the workspace.
//
// Notes                Can only be run in interactive mode. After this call the
//                      EMAP object will become invalid. If this is the last view on
//                      the document and the document has been modified the map will be
//                      unloaded and optionally saved depending on the EMAP_REMOVE
//                      parameter.
//
// Available            5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_DestroyView_EMAP(EMAP,   // EMAP object
                                        int);   // EMAP_REMOVE


  
//-----------------------------------------------------------------------------------------------------------
// App_FontLST_EMAP List all Windows and geosoft fonts.
//
// Notes            To get TT and GFN fonts, call twice with the same list
//                  and EMAP_FONT_TT, then EMAP_FONT_GFN, or vice-versa to
//                  change order of listing.
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_FontLST_EMAP(EMAP,   // EMAP Object
                                    LST,    // List Object
                                    int);   // EMAP_FONT


  
//-----------------------------------------------------------------------------------------------------------
// App_iChangeCurrentView_EMAP Change the current working view.
//
// Returns                     0 if view set, 1 if view does not exist.
//
// Notes                       This function operates on the current map.
//                             Unlike iSetCurrentView_EMAP this function's action
//                             survive the GX finishing.
//
// Available                   5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iChangeCurrentView_EMAP(EMAP,     // EMAP object
                                              string);  // View name


  
//-----------------------------------------------------------------------------------------------------------
// App_iCreateGroupSnapshot_EMAP Loads an LST with the current view/group names
//                               existing in a map. Typically used to track group
//                               changes that are about to occur.
//
// Returns                       0 if LST filled properly
//                               1 if not
//
// Available                     5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iCreateGroupSnapshot_EMAP(EMAP,   // EMAP object
                                                LST);   // LST object to fill


  
//-----------------------------------------------------------------------------------------------------------
// App_IGet3DViewName_EMAP Get the name of a 3D view if the current view is 3D.
//
// Available               5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_IGet3DViewName_EMAP(EMAP,         //
                                           var string,   // Name returned
                                           int);         // Size of the String
#define _App_IGet3DViewName_EMAP(emap, name) App_IGet3DViewName_EMAP(emap, name, sizeof(name))


  
//-----------------------------------------------------------------------------------------------------------
// App_IGetCurrentGroup_EMAP Get the current group name.
//
// Notes                     This function operates on the current map.
//
// Available                 5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_IGetCurrentGroup_EMAP(EMAP,         // EMAP object
                                             var string,   // Returned group name
                                             int);         // Length of the name string passed in
#define _App_IGetCurrentGroup_EMAP(emap, group) App_IGetCurrentGroup_EMAP(emap, group, sizeof(group))


  
//-----------------------------------------------------------------------------------------------------------
// App_IGetCurrentView_EMAP Get the current view name.
//
// Notes                    This function operates on the current map.
//
// Available                5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_IGetCurrentView_EMAP(EMAP,         // EMAP object
                                            var string,   // Returned view name
                                            int);         // Length of the name string passed in
#define _App_IGetCurrentView_EMAP(emap, view) App_IGetCurrentView_EMAP(emap, view, sizeof(view))


  
//-----------------------------------------------------------------------------------------------------------
// App_iGetMapsLST_EMAP Load the file names of open maps into a LST.
//
// Returns              The number of documents loaded into the LST.
//                      The LST is cleared first.
//
// Available            5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iGetMapsLST_EMAP(LST,   // LST to load
                                       int);  // EMAP_PATH


  
//-----------------------------------------------------------------------------------------------------------
// App_IGetName_EMAP Get the name of the map object of this EMAP.
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_IGetName_EMAP(EMAP,         //
                                     var string,   // Name returned
                                     int);         // Size of the String
#define _App_IGetName_EMAP(emap, name) App_IGetName_EMAP(emap, name, sizeof(name))


  
//-----------------------------------------------------------------------------------------------------------
// App_iHaveCurrent_EMAP This method returns whether a current map is loaded
//
// Returns               0 - no current map.
//                       1 - current map
//
// Available             5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iHaveCurrent_EMAP();


  
//-----------------------------------------------------------------------------------------------------------
// App_iIGetSpecifiedMapName_EMAP Find a loaded map that has a setting in its reg.
//
// Returns                        0 - Ok
//                                1 - No Map Found
//
// Available                      5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iIGetSpecifiedMapName_EMAP(string,       // REG field name
                                                 string,       // REG field value to find
                                                 var string,   // Buffer for map name
                                                 int);         // Buffer size
#define _App_iIGetSpecifiedMapName_EMAP(field, value, name) App_iIGetSpecifiedMapName_EMAP(field, value, name, sizeof(name))


  
//-----------------------------------------------------------------------------------------------------------
// App_iIsGrid_EMAP Is the map a grid map?
//
// Returns          1 - Yes, 0 - No
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iIsGrid_EMAP(EMAP);  // EMAP object


  
//-----------------------------------------------------------------------------------------------------------
// App_ReloadGrid_EMAP Reloads a grid document.
//
// Notes               Use this method to reload (if loaded) a grid document if the file on disk changed.
//
// Available           9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_ReloadGrid_EMAP(string);  // Source file name


  
//-----------------------------------------------------------------------------------------------------------
// App_iIs3DView_EMAP Is the current view a 3D view.
//
// Returns            1 - Yes, 0 - No
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iIs3DView_EMAP(EMAP);  // EMAP object


  
//-----------------------------------------------------------------------------------------------------------
// App_GetE3DV_EMAP Get an E3DV from the EMAP
//
// Returns          E3DV object
//
// Available        9.3
//-----------------------------------------------------------------------------------------------------------

[_public_app] E3DV App_GetE3DV_EMAP(EMAP);  // EMAP object


  
//-----------------------------------------------------------------------------------------------------------
// App_iIsLocked_EMAP Checks if map is locked
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iIsLocked_EMAP(EMAP);  // EMAP object


  
//-----------------------------------------------------------------------------------------------------------
// App_iLoaded_EMAP Returns 1 if a map is loaded .
//
// Returns          1 if map is loaded, 0 otherwise.
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iLoaded_EMAP(string);  // Map name


  
//-----------------------------------------------------------------------------------------------------------
// App_iReadOnly_EMAP Checks if a map is currently opened in a read-only mode.
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iReadOnly_EMAP(EMAP);  //


  
//-----------------------------------------------------------------------------------------------------------
// App_GetWindowPosition_EMAP Get the map window's position and dock state
//
// Available                  9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_GetWindowPosition_EMAP(EMAP,      //
                                              var int,   // Window left position
                                              var int,   // Window top position
                                              var int,   // Window right position
                                              var int,   // Window bottom position
                                              var int,   // Window state EMAP_WINDOW_STATE
                                              var int);  // Docked or floating EMAP_WINDOW_POSITION


  
//-----------------------------------------------------------------------------------------------------------
// App_SetWindowPosition_EMAP Get the map window's position and dock state
//
// Available                  9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_SetWindowPosition_EMAP(EMAP,   //
                                              int,    // Window left position
                                              int,    // Window top position
                                              int,    // Window right position
                                              int,    // Window bottom position
                                              int,    // Window state EMAP_WINDOW_STATE
                                              int);   // Docked or floating EMAP_WINDOW_POSITION


  
//-----------------------------------------------------------------------------------------------------------
// App_iRealizeGroupSnapshot_EMAP The LST passed in must contain View\Group strings in
//                                the Name field only. The function will compare with
//                                a more current LST and zoom the map to the new entry.
//
// Returns                        0 if zoom proceeded ok
//                                1 if error
//
// Notes                          Typically this function is used in conjunction with
//                                CreateSnapshot_EMAP.
//
// Available                      5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iRealizeGroupSnapshot_EMAP(EMAP,   // EMAP object
                                                 LST);   // LST object used for comparison


  
//-----------------------------------------------------------------------------------------------------------
// App_iSetCurrentView_EMAP Set the current working view.
//
// Returns                  0 if view set, 1 if view does not exist.
//
// Notes                    This function operates on the current map.
//                          It changes the view only during the execution of the
//                          GX. As soon as the GX terminates the view will revert
//                          to the original one.
//
// Available                5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iSetCurrentView_EMAP(EMAP,     // EMAP object
                                           string);  // View name


  
//-----------------------------------------------------------------------------------------------------------
// App_GetViewIPJ_EMAP Get a view's IPJ.
//
// Notes               This function can be used to obtain a views coordinate system 
//                     without having to call Lock_EMAP. This could be an expensive operation
//                     that cause undesirable UX.
//
// Available           9.1
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_GetViewIPJ_EMAP(EMAP,     // EMAP object
                                       string,   // View name
                                       IPJ);     // IPJ in which to place the view IPJ


  
//-----------------------------------------------------------------------------------------------------------
// App_Load_EMAP Loads maps into the editor.
//
// Returns       EMAP Object to edited map.
//
// Notes         The last map in the list will be the current map.
//               
//               Maps may already be loaded.
//               
//               Only the first file in the list may have a directory path.
//               All other files in the list are assumed to be in the same
//               directory as the first file.
//
// Available     5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] EMAP App_Load_EMAP(string);  // List of maps (';' or '|' delimited) to load.


  
//-----------------------------------------------------------------------------------------------------------
// App_LoadNoActivate_EMAP Loads documents into the workspace
//
// Returns                 Handle to current edited document, which will be the last
//                         database in the list if multiple files were provided.
//
// Notes                   This function acts just like Load_EMAP except that the document(s) is not activated (brought to foreground) and no
//                         guarantee is given about which document is currently active.
//
// Available               5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] EMAP App_LoadNoActivate_EMAP(string);  // List of documents (';' or '|' delimited) to load.


  
//-----------------------------------------------------------------------------------------------------------
// App_LoadWithView_EMAP Load an EMAP with the view from a current EMAP.
//
// Returns               New EMAP handle.
//
// Notes                 Can only be run in interactive mode. Is used by
//                       dbsubset to create a new database with the same
//                       view as previously.
//
// Available             5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] EMAP App_LoadWithView_EMAP(string,   // Source Map name
                                         EMAP);    // EMAP to use as the source view


  
//-----------------------------------------------------------------------------------------------------------
// App_Lock_EMAP This method locks the Edited map.
//
// Returns       EMAP Object to map associated with edited map.
//
// Notes         The Redraw flag is set to EMAP_REDRAW_YES when this functions is called.
//
// Available     5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] MAP App_Lock_EMAP(EMAP);  // EMAP object


  
//-----------------------------------------------------------------------------------------------------------
// App_MakeCurrent_EMAP Makes this EMAP object the current active object to the user.
//
// Available            5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_MakeCurrent_EMAP(EMAP);  // EMAP to make active


  
//-----------------------------------------------------------------------------------------------------------
// App_Print_EMAP Print the current map to current printer.
//
// Available      5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_Print_EMAP(EMAP,     // EMAP object
                                  int,      // lEntireMap  (0 or 1)
                                  int,      // lScaleToFit 0 - use scale factor 1 - fit to media 2 - fit to roll media
                                  int,      // lPrintToFile(0 or 1)
                                  int,      // lAllPages   (0 or 1)
                                  int,      // lCentre     (0 or 1)
                                  int,      // lCopies
                                  int,      // lFirstPage
                                  int,      // lLastPage
                                  real,     // dScaleFactor (2.0 doubles plot size)
                                  int,      // lOverlapSize (mm)
                                  int,      // lOffsetX     (mm)
                                  int,      // lOffsetY     (mm)
                                  string);  // szFile       (if lPrintToFile==1)


  
//-----------------------------------------------------------------------------------------------------------
// App_Redraw_EMAP Redraw the map immediately.
//
// Notes           Redraws the map immediately. Map must not be locked.
//
// Available       5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_Redraw_EMAP(EMAP);  // EMAP object


  
//-----------------------------------------------------------------------------------------------------------
// App_SelectGroup_EMAP Select a group.
//
// Available            5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_SelectGroup_EMAP(EMAP,     // EMAP object
                                        string);  // "View/Group"


  
//-----------------------------------------------------------------------------------------------------------
// App_SetRedrawFlag_EMAP Set the redraw flag.
//
// Notes                  This function is generally used to prevent redrawing of
//                        the map, which normally occurs after the last UnLock_EMAP
//                        call, in cases where it is known that no changes are being
//                        made to the map.
//                        
//                        Typical usage would be to call Lock_EMAP followed by
//                        SetRedrawFlag_EMAP (with def_val:`EMAP_REDRAW_NO`) prior
//                        to querying information from the map. And then end with a call to
//                        UnLock_EMAP.
//
// Available              5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_SetRedrawFlag_EMAP(EMAP,   // EMAP object
                                          int);   // EMAP_REDRAW


  
//-----------------------------------------------------------------------------------------------------------
// App_UnLoad_EMAP Unloads a MAP.
//
// Notes           If the MAP is not loaded, nothing happens.
//                 Same as UnLoadVerify_EMAP with FALSE to prompt save.
//
// Available       5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_UnLoad_EMAP(string);  // Name of the map to unload


  
//-----------------------------------------------------------------------------------------------------------
// App_UnLoadAll_EMAP Unloads all opened maps
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_UnLoadAll_EMAP();


  
//-----------------------------------------------------------------------------------------------------------
// App_UnLoadVerify_EMAP Unloads an edited map, optional prompt to save.
//
// Notes                 If the map is not loaded, nothing happens.
//                       If "FALSE", map is saved without a prompt.
//
// Available             5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_UnLoadVerify_EMAP(string,   // Name of map to unload
                                         int);     // Prompt?


  
//-----------------------------------------------------------------------------------------------------------
// App_UnLock_EMAP This method unlocks the Edited map.
//
// Available       5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_UnLock_EMAP(EMAP);  // EMAP object



//===========================================================================================================
//
// Input
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// App_GetCurPoint_EMAP Returns the coordinates of the currently selected point in view coordinates
//
// Available            5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_GetCurPoint_EMAP(EMAP,       // EMAP object
                                        var real,   // X coordinate in current user units.
                                        var real);  // Y


  
//-----------------------------------------------------------------------------------------------------------
// App_GetCurPointMM_EMAP Returns the coordinates of the currently selected point in mm on map
//
// Available              5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_GetCurPointMM_EMAP(EMAP,       // EMAP object
                                          var real,   // X coordinate in map mm
                                          var real);  // Y


  
//-----------------------------------------------------------------------------------------------------------
// App_GetCursor_EMAP Returns the coordinates of the last known cursor location
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_GetCursor_EMAP(EMAP,       // EMAP object
                                      var real,   // X coordinate in current view user units
                                      var real);  // Y


  
//-----------------------------------------------------------------------------------------------------------
// App_GetCursorMM_EMAP Returns the coordinates of the last known cursor location in mm on map.
//
// Available            5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_GetCursorMM_EMAP(EMAP,       // EMAP object
                                        var real,   // X coordinate in map mm
                                        var real);  // Y


  
//-----------------------------------------------------------------------------------------------------------
// App_iDigitize_EMAP Digitise points from the current map and place in a WA.
//
// Returns            0 if user digitized some points.
//                    1 if user cancelled.
//
// Notes              The command line will start to recieve digitized points
//                    from the mouse.  Whenever the left mouse button is
//                    pressed, the current view X,Y are placed on the workspace
//                    command line.  If a valid IMG is passed, the Z value is
//                    also placed on the command line.  If auto-newline is
//                    specified, the line is immediately placed into WA,
//                    otherwise the user has the oportunity to enter data
//                    before pressing Enter.
//                    
//                    Locations are in the current view user units
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iDigitize_EMAP(EMAP,     // EMAP object
                                     WA,       // WA in which to write digitized points
                                     IMG,      // IMG for Z value, or IMG_NULL for no Z.
                                     int,      // Number of significant digits to use, 0 for all.
                                     string,   // Command line prompt string
                                     string,   // New line prefix string
                                     string,   // Delimiter
                                     int);     // 0 for no newline 1 for automatic newline at each point


  
//-----------------------------------------------------------------------------------------------------------
// App_iDigitize2_EMAP Digitise points from the current map and place in VVs.
//
// Returns             0 if user digitized some points.
//                     1 if user cancelled.
//
// Notes               The command line will start to recieve digitized points
//                     from the mouse.  Whenever the left mouse button is
//                     pressed, the current view X,Y are placed on the workspace
//                     command line.  If a valid IMG is passed, the Z value is
//                     also placed on the command line.  If auto-newline is
//                     specified, the line is immediately placed into the VVs,
//                     otherwise the user has the oportunity to enter data
//                     before pressing Enter.
//                     
//                     Locations are in the current view user units
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iDigitize2_EMAP(EMAP,     // EMAP object
                                      VV,       // Real X VV
                                      VV,       // Real Y VV
                                      VV,       // Real Z VV
                                      IMG,      // IMG for Z value, or IMG_NULL for no Z.
                                      string,   // Command line prompt string
                                      int);     // 0 for no newline 1 for automatic newline at each point


  
//-----------------------------------------------------------------------------------------------------------
// App_iDigitizePeaks_EMAP Digitise points from the current map and place in VVs.
//
// Returns                 0 if user digitized some points.
//                         1 if user cancelled.
//
// Notes                   Same as iDigitize2_EMAP, but the closest peaks to the selected locations are
//                         returned instead of the selected location. The method chooses the highest value
//                         of the 8 surrounding points, the repeats this process until no higher value can
//                         be found in any of the 8 surrounding points. If there are two or more points with
//                         a higher value, it will just take the first one and continue, and this method will
//                         stall on flat areas as well (since no surrounding point is larger).
//
// Available               9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iDigitizePeaks_EMAP(EMAP,     // EMAP object
                                          VV,       // Real X VV
                                          VV,       // Real Y VV
                                          VV,       // Real Z VV
                                          IMG,      // IMG for Z value, or IMG_NULL for no Z.
                                          string,   // Command line prompt string
                                          int);     // 0 for no newline 1 for automatic newline at each point


  
//-----------------------------------------------------------------------------------------------------------
// App_iDigitizePolygon_EMAP Same as iDigitze2_EMAP, but automatically close polygons.
//
// Returns                   0 if user digitized some points.
//                           1 if user cancelled.
//
// Notes                     This is the same as iDigitize2_EMAP, except that it automatically
//                           detects, (except for the 2nd and 3rd points) when a selected location
//                           is within the entered number of pixels from the starting point. If yes,
//                           the polygon is assumed to be closed, and the operation is the same as
//                           the RMB "done" command, and the process returns 0.
//
// Available                 5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iDigitizePolygon_EMAP(EMAP,     // EMAP object
                                            VV,       // Real X VV
                                            VV,       // Real Y VV
                                            VV,       // Real Z VV
                                            IMG,      // IMG for Z value, or IMG_NULL for no Z.
                                            string,   // Command line prompt string
                                            int,      // 0 for no newline 1 for automatic newline at each point
                                            int);     // Close the polygon if the selected location is within this radius in screen pixels.


  
//-----------------------------------------------------------------------------------------------------------
// App_iGetBox_EMAP Returns the coordinates of a user selected box.
//
// Returns          0 if point returned.
//                  1 if user cancelled.
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iGetBox_EMAP(EMAP,       // EMAP object
                                   string,     // User prompt string
                                   var real,   // X minimum in current view user units.
                                   var real,   // Y
                                   var real,   // X maximum
                                   var real);  // Y


  
//-----------------------------------------------------------------------------------------------------------
// App_iGetBox2_EMAP Returns the coordinates of a user selected box in a warped view.
//
// Returns           0 if point returned.
//                   1 if user cancelled.
//
// Notes             If the data view has a rotational (or other) warp, then the
//                   iGetBox_EMAP function returns only opposite diagonal points in the
//                   box, not enough info to determine the other two corners. This
//                   function returns the exact coordinates of all four corners, calculated
//                   from the pixel locations.
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iGetBox2_EMAP(EMAP,       // EMAP object
                                    string,     // User prompt string
                                    var real,   // X1 bottom left corner
                                    var real,   // Y1
                                    var real,   // X2 bottom right corner
                                    var real,   // Y2
                                    var real,   // X3 top right corner
                                    var real,   // Y3
                                    var real,   // X4 top left corner
                                    var real);  // Y4


  
//-----------------------------------------------------------------------------------------------------------
// App_iGetGrid_EMAP Position and size a grid on a map.
//
// Returns           0 if line returned.
//                   1 if user cancelled.
//
// Notes             If the input angle is rDUMMY, an extra step is inserted
//                   for the user to define the angle by drawing a line
//                   with the mouse.
//                   The output primary axis angle will always be in the
//                   range -90 < angle <= 90. The grid origin is shifted to
//                   whichever corner necessary to make this possible, while keeping
//                   the secondary axis at 90 degrees greater than the primary (
//                   going counter-clockwise).
//                   The coordinates are returned in the current User projection
//                   (See GetUserIPJ_MVIEW and SetUserIPJ_MVIEW.)
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iGetGrid_EMAP(EMAP,       // EMAP object
                                    string,     // User prompt string
                                    int,        // Number of elements along primary axis to draw.
                                    int,        // Number of elements along secondary axis to draw.
                                    var real,   // Angle of primary axis in degrees
                                    var real,   // Grid origin X
                                    var real,   // Grid origin Y
                                    var real,   // Primary axis length
                                    var real);  // Secondary axis length


  
//-----------------------------------------------------------------------------------------------------------
// App_iGetLine_EMAP Returns the end points of a line.
//
// Returns           0 if line returned.
//                   1 if user cancelled.
//
// Notes             The coordinates are returned in the current User projection
//                   (See GetUserIPJ_MVIEW and SetUserIPJ_MVIEW.)
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iGetLine_EMAP(EMAP,       // EMAP object
                                    string,     // User prompt string
                                    var real,   // X1 in view user units
                                    var real,   // Y1
                                    var real,   // X2
                                    var real);  // Y2


  
//-----------------------------------------------------------------------------------------------------------
// App_iGetLineEx_EMAP Returns the end points of a line.
//
// Returns             0 if line returned.
//                     1 - Right Mouse
//                     2 - Escape/Cancel
//
// Notes               The coordinates are returned in the current User projection
//                     (See GetUserIPJ_MVIEW and SetUserIPJ_MVIEW.)
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iGetLineEx_EMAP(EMAP,       // EMAP object
                                      string,     // User prompt string
                                      var real,   // X1 in view user units
                                      var real,   // Y1
                                      var real,   // X2
                                      var real);  // Y2


  
//-----------------------------------------------------------------------------------------------------------
// App_iGetLineXYZ_EMAP Returns the end points of a line in X,Y and Z
//
// Returns              0 if line returned.
//                      1 - Right Mouse
//                      2 - Escape/Cancel
//
// Notes                The coordinates are returned in the current User projection
//                      (See GetUserIPJ_MVIEW and SetUserIPJ_MVIEW.)
//                      This is useful for digitizing a line in an oriented view and getting
//                      the true coordinates in (X, Y, Z) at the selected point on the view plane.
//
// Available            5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iGetLineXYZ_EMAP(EMAP,       // EMAP object
                                       string,     // User prompt string
                                       var real,   // X1 in view user units
                                       var real,   // Y1
                                       var real,   // Z1
                                       var real,   // X2
                                       var real,   // Y2
                                       var real);  // Z2


  
//-----------------------------------------------------------------------------------------------------------
// App_iGetPoint_EMAP Returns the coordinates of a user selected point.
//
// Returns            0 if point returned.
//                    1 if user cancelled.
//
// Notes              This will wait for user to select a point.
//
// See also           iTrackPoint, GetCurPoint, GetCursor
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iGetPoint_EMAP(EMAP,       // EMAP object
                                     string,     // User prompt string
                                     var real,   // X coordinate in current view user units.
                                     var real);  // Y


  
//-----------------------------------------------------------------------------------------------------------
// App_iGetPointEx_EMAP Returns the coordinates of a user selected point.
//
// Returns              0 if point returned.
//                      1 if user used right mouse and then Done.
//                      2 if user cancelled.
//                      3 if capture is lost.
//
// Notes                This will wait for user to select a point.
//
// See also             iTrackPoint, GetCurPoint, GetCursor
//
// Available            5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iGetPointEx_EMAP(EMAP,       // EMAP object
                                       string,     // User prompt string
                                       var real,   // X coordinate in current view user units.
                                       var real);  // Y


  
//-----------------------------------------------------------------------------------------------------------
// App_iGetPoint3D_EMAP Returns the coordinates of a user selected point.
//
// Returns              0 if point returned.
//                      1 if user used right mouse and then Done.
//                      2 if user cancelled.
//                      3 if capture is lost.
//
// Notes                This will wait for user to select a point.
//
// See also             iTrackPoint, GetCurPoint, GetCursor
//
// Available            9.1
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iGetPoint3D_EMAP(EMAP,       // EMAP object
                                       string,     // User prompt string
                                       var real,   // X coordinate in current view user units.
                                       var real,   // Y
                                       var real);  // Z


  
//-----------------------------------------------------------------------------------------------------------
// App_iGetPolyLine_EMAP Returns a polyline.
//
// Returns               0 if line returned.
//                       1 if user cancelled.
//
// Notes                 The coordinates are returned in the current User projection
//                       (See GetUserIPJ_MVIEW and SetUserIPJ_MVIEW.)
//
// Available             5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iGetPolyLine_EMAP(EMAP,     // EMAP object
                                        string,   // User prompt string
                                        VV,       // X
                                        VV);      // Y


  
//-----------------------------------------------------------------------------------------------------------
// App_iGetPolyLineXYZ_EMAP Returns a polyline.
//
// Returns                  0 if line returned.
//                          1 if user cancelled.
//
// Notes                    The coordinates are returned in the current User projection
//                          (See GetUserIPJ_MVIEW and SetUserIPJ_MVIEW.) In this version
//                          of the method X, Y and Z (depth) are returned. Initially created
//                          to deal with crooked sections.
//
// Available                5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iGetPolyLineXYZ_EMAP(EMAP,     // EMAP object
                                           string,   // User prompt string
                                           VV,       // X
                                           VV,       // Y
                                           VV);      // Z


  
//-----------------------------------------------------------------------------------------------------------
// App_iGetRect_EMAP Returns the coordinates of a user selected box starting at a corner.
//
// Returns           0 if point returned.
//                   1 if user cancelled.
//
// Notes             The coordinates are returned in the current User projection
//                   (See GetUserIPJ_MVIEW and SetUserIPJ_MVIEW.)
//                   If the user IPJ distorts the coordinates from being rectilinear
//                   (e.g. for a TriPlot graph), then care should be taken since the
//                   (Xmin, Ymin) and (Xmax, Ymax) values returned do not necessarily
//                   correspond to the lower-left and upper-right corners. In fact, the
//                   returned values are calculated by taking the starting (fixed) corner
//                   and the tracked (opposite) corner, and finding the min and max for
//                   X and Y among these two points. With a warped User projection, those
//                   two corner locations could easily be (Xmin, Ymax) and (Xmax, Ymin).
//                   This becomes quite important if you want to use the rectangle for a
//                   masking operation, because the "other" two corner's coordinates may
//                   need to be constructed based on a knowledge of the User projection,
//                   and may not be directly obtained from the returned X and Y min and
//                   max values. What appears to be a rectangle as seen on the map is not
//                   necessarily a rectangle in the User coordinates.
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iGetRect_EMAP(EMAP,       // EMAP object
                                    string,     // User prompt string
                                    var real,   // X minimum in current view user units.   (defines corner)
                                    var real,   // Y
                                    var real,   // X maximum
                                    var real);  // Y


  
//-----------------------------------------------------------------------------------------------------------
// App_iTrackPoint_EMAP Get point without prompt or cursor change with tracking
//
// Returns              0 if point returned.
//                      1 if user cancelled.
//
// Available            5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int App_iTrackPoint_EMAP(EMAP,       // EMAP object
                                       int,        // EMAP_TRACK
                                       var real,   // X coordinate in current view user units.
                                       var real);  // Y



//===========================================================================================================
//
// Map Viewport Mode Methods
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// App_GetAOIArea_EMAP Get the area of interest.
//
// Notes               Coordinates are based on the current view units.
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_GetAOIArea_EMAP(EMAP,       // EMAP object
                                       var real,   // X Min returned
                                       var real,   // Y Min returned
                                       var real,   // X Max returned
                                       var real);  // Y Max returned


  
//-----------------------------------------------------------------------------------------------------------
// App_SetAOIArea_EMAP Set the area of interest.
//
// Notes               Coordinates are based on the current view user units.
//                     The map is immediatly redrawn.
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_SetAOIArea_EMAP(EMAP,   // EMAP object
                                       real,   // X Min
                                       real,   // Y Min
                                       real,   // X Max
                                       real);  // Y Max


  
//-----------------------------------------------------------------------------------------------------------
// App_SetViewportMode_EMAP Set the viewport mode.
//
// Notes                    This is handy for using a map to define an area of interest. Use in conjunction
//                          with Get/Set AOIArea. If this is used inside montaj it is important to set or provide
//                          for a method to set the map mode back to normal as this is not exposed in the interface.
//
// Available                5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_SetViewportMode_EMAP(EMAP,   // EMAP object
                                            int);   // EMAP_VIEWPORT



//===========================================================================================================
//
// Tracking Methods
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// App_GetSelectedVertices_EMAP Get the verticies of selected object
//
// Notes                        Works only in Vertex Edit Mode
//
// Available                    5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void App_GetSelectedVertices_EMAP(EMAP,   // EMAP Handle
                                                VV,     // X VV Handle
                                                VV);    // Y VV Handle



//===========================================================================================================
//
// Virtual
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// App_CreateVirtual_EMAP Makes this EMAP object the current active object to the user.
//
// Returns                EMAP Object
//
// Available              5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] EMAP App_CreateVirtual_EMAP(string);  // Name of map to create a virtual EMAP from



//===========================================================================================================
//
// External Window
//
//===========================================================================================================





//*** endblock Generated

#endif