//*** extends 'class_empty.gxh'

#ifndef HPROJ_GXH_DEFINED
#define HPROJ_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class PROJ
//
//-----------------------------------------------------------------------------------------------------------
//
// Project functions
//
//-----------------------------------------------------------------------------------------------------------

//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// COMMAND_ENV Definitions
//
// Command environments
//
// COMMAND_ENV_NORMAL
// Normal
//
// COMMAND_ENV_IN3DVIEWER
// Executing from inside 3D Viewer
//
//===========================================================================================================


#define COMMAND_ENV_NORMAL 0
#define COMMAND_ENV_IN3DVIEWER 1


//===========================================================================================================
//
// TOOL_TYPE Definitions
//
// Tool type defines
//
// TOOL_TYPE_DEFAULT
// Geosoft created default tools
//
// TOOL_TYPE_AUXILIARY
// Auxiliary tools (including custom XTools)
//
// TOOL_TYPE_ALL
// All tools
//
//===========================================================================================================


#define TOOL_TYPE_DEFAULT 0
#define TOOL_TYPE_AUXILIARY 1
#define TOOL_TYPE_ALL 2


//===========================================================================================================
//
// PROJ_DISPLAY Definitions
//
// How to display an object
//
// PROJ_DISPLAY_NO
// Do not display the object
//
// PROJ_DISPLAY_YES
// Display the object unless user set option not to
//
// PROJ_DISPLAY_ALWAYS
// Always display the object
//
//===========================================================================================================


#define PROJ_DISPLAY_NO 0
#define PROJ_DISPLAY_YES 1
#define PROJ_DISPLAY_ALWAYS 2





//===========================================================================================================
//
// Drag-and-drop methods Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// DropMapClipData_PROJ Drop Map clipboard data in the current project (workspace background)
//
// Available            5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void DropMapClipData_PROJ(int);  // Handle to Global Clipboard data



//===========================================================================================================
//
// Miscellaneous Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// iAddDocument_PROJ Adds (and opens) a document file in the current project.
//
// Returns           0 - Ok
//                   1 - Error
//
// Notes             The passed file name must be a valid
//                   file name complete with an extension and
//                   qualifiers (if applicable).
//                   
//                   The type string can be one of the following:
//                   
//                       Database      
//                       Grid          
//                       Map           
//                       3DView        
//                       Geosurface
//                       Voxel         
//                       VoxelInversion
//                       GMS3D         
//                       GMS2D
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iAddDocument_PROJ(string,   // Document name
                                    string,   // Type of document to add
                                    int);     // PROJ_DISPLAY


  
//-----------------------------------------------------------------------------------------------------------
// iAddDocumentWithoutOpening_PROJ Adds (and opens) a document file in the current project.
//
// Returns                         0 - Ok
//                                 1 - Error
//
// Notes                           The passed file name must be a valid
//                                 file name complete with an extension and
//                                 qualifiers (if applicable).
//                                 
//                                 The type string can be one of the following:
//                                 
//                                     Database      
//                                     Grid          
//                                     Map           
//                                     3DView        
//                                     Geosurface
//                                     Voxel         
//                                     VoxelInversion
//                                     GMS3D         
//                                     GMS2D
//
// Available                       8.5
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iAddDocumentWithoutOpening_PROJ(string,   // Document name
                                                  string);  // Type of document to add


  
//-----------------------------------------------------------------------------------------------------------
// iAddGridDocument_PROJ Adds (and opens) a grid document file in the current project with a particular colour distribution and colour file.
//
// Returns               0 - Ok
//                       1 - Error
//
// Notes                 The passed file name must be a valid Grid document
//                       with an extension and qualifiers (if applicable).
//
// Available             9.7
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iAddGridDocument_PROJ(string,   // Document name
                                        string,   // Colour zone file to use
                                        int,      // Colour method to use - one of the ITR_ZONE_XXXX values
                                        int);     // PROJ_DISPLAY


  
//-----------------------------------------------------------------------------------------------------------
// iGetCommandEnvironment_PROJ The current command environment
//
// Returns                     COMMAND_ENV
//                             
//                             Notes									
//                             
//                             We are moving towards embedded tools and menus and this setting can be
//                             queried from the project to determine how specific commands should react.
//                             Only 3D viewer is currently making use of this.
//                             
//                             If new Command environment enum values are added, then update the iGetCommandEnvironment_PROJ() function
//                             in geogxgui\gxx_app.cpp and in the COMMAND_ENVIRONMENT enums in geoengine.core\include\obj\objgp.h.
//
// Available                   5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iGetCommandEnvironment_PROJ();


  
//-----------------------------------------------------------------------------------------------------------
// iListDocuments_PROJ Fills a VV with documents of a certain type.
//
// Returns             The number of documents listed in the VV.
//
// Notes               The type string can be one of the following:
//                     Database         List Databases.
//                     Grid             List Grids.
//                     Map              List Maps.
//                     3DView           List 3D Views.
//                     Geosurface       List Geosurfaces.
//                     Voxel            List Voxels.
//                     VoxelInversion   List VOXI Documents.
//                     MXD              List ArcGIS MXDs.
//                     GMS3D            List GM-SYS 3D Models.
//                     GMS2D            List GM-SYS 2D Models.
//                     All              Lists all files.
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iListDocuments_PROJ(VV,       // VV of type -STR_FILE
                                      string);  // Type of document to obtain


  
//-----------------------------------------------------------------------------------------------------------
// iListLoadedDocuments_PROJ Fills a VV with loaded documents of a certain type.
//
// Returns                   The number of loaded documents listed in the VV.
//
// Notes                     The type string can be one of the following:
//                           Database         List Databases.
//                           Grid             List Grids.
//                           Map              List Maps.
//                           3DView           List 3D Views.
//                           Geosurface       List Geosurfaces.
//                           Voxel            List Voxels.
//                           VoxelInversion   List VOXI Documents.
//                           MXD              List ArcGIS MXDs.
//                           GMS3D            List GM-SYS 3D Models.
//                           GMS2D            List GM-SYS 2D Models.
//                           All              Lists all files.
//
// Available                 9.2
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iListLoadedDocuments_PROJ(VV,       // VV of type -STR_FILE>
                                            string);  // Type of document to obtain


  
//-----------------------------------------------------------------------------------------------------------
// ICurrentDocument_PROJ Get the name and type of the loaded document with focus.
//
// Returns               Nothing.
//
// Available             9.2
//-----------------------------------------------------------------------------------------------------------

[_public_app] void ICurrentDocument_PROJ(var string,   // Name (empty if none currently loaded)
                                         int,          // Maximum name length
                                         var string,   // Type
                                         int);         // Maximum type length
#define CurrentDocument_PROJ(name, type) ICurrentDocument_PROJ(name, sizeof(name), type, sizeof(type))


  
//-----------------------------------------------------------------------------------------------------------
// ICurrentDocumentOfType_PROJ Get the name of a loaded document of a specific type.
//
// Returns                     Nothing.
//
// Available                   9.2
//-----------------------------------------------------------------------------------------------------------

[_public_app] void ICurrentDocumentOfType_PROJ(var string,   // Name (empty if none currently loaded)
                                               int,          // Maximum name length
                                               string);      // Type
#define CurrentDocumentOfType_PROJ(name, type) ICurrentDocumentOfType_PROJ(name, sizeof(name), type)


  
//-----------------------------------------------------------------------------------------------------------
// iListTools_PROJ Fills an LST object with tools of a certain type and
//                 notes the current visibility setting.
//
// Returns         The number of tools found.
//
// Notes           GX will terminate if there is an error.
//                 
//                 LST object will hold the tool name in the name column and
//                 include whether the tool is currently visible in the value
//                 column (1=visible, 0-hidden).
//
// Available       5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iListTools_PROJ(LST,   // LST object to hold list
                                  int);  // TOOL_TYPE


  
//-----------------------------------------------------------------------------------------------------------
// iRemoveDocument_PROJ Removes (and closes if visible) a document from the current project.
//
// Returns              0 - Ok
//                      1 - Document not found in project
//
// Notes                The passed file name must be a valid
//                      file name complete with an extension and
//                      qualifiers (if applicable).
//
// Available            5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iRemoveDocument_PROJ(string);  // Document name


  
//-----------------------------------------------------------------------------------------------------------
// iRemoveTool_PROJ Removes (and closes if visible) a auxiliary tool from the current project.
//
// Returns          0 - Ok
//                  1 - Tool not found in project
//
// Notes            Nothing
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iRemoveTool_PROJ(string);  // Tool name


  
//-----------------------------------------------------------------------------------------------------------
// iSaveCloseDocuments_PROJ Saves and closes (if visible) documents contained in the current project.
//
// Returns                  0  - Ok
//                          -1 - User hit cancel in save dialog
//                          1  - Error
//
// Notes                    This wrapper brings up the save dialog tool to allow
//                          the user to save the modified documents for this project.
//                          Only documents that have actually changed will be listed.
//                          
//                          The type string can be one of the following:
//                          
//                              Database      
//                              Grid          
//                              Map           
//                              3DView        
//                              Geosurface
//                              Voxel         
//                              VoxelInversion
//                              GMS3D         
//                              GMS2D
//                              All
//
// Available                5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iSaveCloseDocuments_PROJ(string);  // Type of document to save / close


  
//-----------------------------------------------------------------------------------------------------------
// IGetName_PROJ Return the name of the project file.
//
// Returns       Nothing.
//
// Notes         Return the name of the project file.
//
// Available     8.4
//-----------------------------------------------------------------------------------------------------------

[_public_app] void IGetName_PROJ(var string,   // name
                                 int);         // maximum name length
#define GetName_PROJ(name) IGetName_PROJ(name, sizeof(name))





//*** endblock Generated


#endif
