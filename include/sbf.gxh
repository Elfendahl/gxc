//*** extends 'class_empty.gxh'

#ifndef HSBF_GXH_DEFINED
#define HSBF_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class SBF
//
//-----------------------------------------------------------------------------------------------------------
//
// The SBF class provides a means of storing data in a
// file-type directory structure within a workspace, database
// or map. Each of these three objects contains its own SBF object,
// which may be accessed using the hGetSYS_SBF, hGetDB_SBF and
// hGetMAP_SBF functions. To access data in a file, or create a
// new file in the SBF object, call the CreatSBF_BF function (see BF),
// which will return a BF object to use.
//
//-----------------------------------------------------------------------------------------------------------



//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// SBF_OPEN Definitions
//
// SBF Open defines
//
// SBF_READ
// Read only
//
// SBF_READWRITE_NEW
// Read/write - erases structured file
//
// SBF_READWRITE_OLD
// Read/write - open and append onto pre-existing structured file
//
//===========================================================================================================


#define SBF_READ 0
#define SBF_READWRITE_NEW 1
#define SBF_READWRITE_OLD 2


//===========================================================================================================
//
// SBF_TYPE Definitions
//
// SBF Object type defines
//
// SBF_TYPE_DIRS
// Embedded directory names
//
// SBF_TYPE_FILES
// Embedded file names
//
// SBF_TYPE_BOTH
// Embedded file and directory names
//
//===========================================================================================================


#define SBF_TYPE_DIRS 1
#define SBF_TYPE_FILES 2
#define SBF_TYPE_BOTH 3





//===========================================================================================================
//
// Miscellaneous Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// Create_SBF Create a child SBF object inside an SBF.
//
// Returns    SBF object, terminates if fails.
//
// Available  5.0
//-----------------------------------------------------------------------------------------------------------

[_public] SBF Create_SBF(SBF,      // Parent SBF
                         string,   // Directory name to open / create
                         int);     // SBF_OPEN


  
//-----------------------------------------------------------------------------------------------------------
// CreateObjList_SBF Fills an LST with embedded storage names of an SBF.
//
// Notes             Function will populate an LST object with embedded files (SBF_TYPE_FILES),
//                   directories (SBF_TYPE_DIRS), or both (pass SBF_TYPE_BOTH) in an SBF.
//                   Along with the Name of the file or directory, a constant "dir" or "file" string is written
//                   to the LST also.
//
// Available         5.0.7
//-----------------------------------------------------------------------------------------------------------

[_public] void CreateObjList_SBF(SBF,   // SBF handle
                                 LST,   // LST handle
                                 int);  // SBF_TYPE


  
//-----------------------------------------------------------------------------------------------------------
// DelDir_SBF Delete a directory (storage) from this storage.
//
// Available  5.0
//-----------------------------------------------------------------------------------------------------------

[_public] void DelDir_SBF(SBF,      // SBF handle
                          string);  // Dir/Storage Name


  
//-----------------------------------------------------------------------------------------------------------
// DelFile_SBF Delete a file from this storage.
//
// Available   5.0
//-----------------------------------------------------------------------------------------------------------

[_public] void DelFile_SBF(SBF,      // SBF handle
                           string);  // File Name


  
//-----------------------------------------------------------------------------------------------------------
// Destroy_SBF Destroy SBF handle.
//
// Available   5.0
//-----------------------------------------------------------------------------------------------------------

[_public] void Destroy_SBF(SBF);  // SBF handle


  
//-----------------------------------------------------------------------------------------------------------
// hGetDB_SBF Get the embedded file storage from a database.
//
// Returns    SBF Object
//
// Available  5.0
//-----------------------------------------------------------------------------------------------------------

[_public] SBF hGetDB_SBF(DB);  // Database


  
//-----------------------------------------------------------------------------------------------------------
// hGetMAP_SBF Get the embedded file storage from a map.
//
// Returns     SBF Object
//
// Available   5.0
//-----------------------------------------------------------------------------------------------------------

[_public] SBF hGetMAP_SBF(MAP);  // MAP object


  
//-----------------------------------------------------------------------------------------------------------
// hGetSYS_SBF Get the main embedded file storage (in workspace).
//
// Returns     SBF Object
//
// Available   5.0
//-----------------------------------------------------------------------------------------------------------

[_public] SBF hGetSYS_SBF();


  
//-----------------------------------------------------------------------------------------------------------
// iExistDir_SBF Check to see if a directory (storage) exists inside this storage.
//
// Returns       0 - Does not exist
//               1 - Exists
//
// Available     5.0
//-----------------------------------------------------------------------------------------------------------

[_public] int iExistDir_SBF(SBF,      // SBF handle
                            string);  // Dir/Storage Name


  
//-----------------------------------------------------------------------------------------------------------
// iExistFile_SBF Check to see if a file exists inside this storage.
//
// Returns        0 - Does not exist
//                1 - Exists
//
// Available      5.0
//-----------------------------------------------------------------------------------------------------------

[_public] int iExistFile_SBF(SBF,      // SBF handle
                             string);  // File Name


  
//-----------------------------------------------------------------------------------------------------------
// SaveLog_SBF Save an embedded file to an ASCII file.
//
// Available   5.0
//-----------------------------------------------------------------------------------------------------------

[_public] void SaveLog_SBF(SBF,      // SBF Parent
                           string,   // Directory name in the Parent SBF
                           string,   // File name in the directory
                           string,   // File to save as (as an ASCII file)
                           int);     // Append Mode: 0 - New file, 1 - Append file





//*** endblock Generated


#endif
